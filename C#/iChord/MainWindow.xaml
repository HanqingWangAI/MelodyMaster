<Window 
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:iChord"
        xmlns:Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero2" xmlns:ed="http://schemas.microsoft.com/expression/2010/drawing" x:Class="iChord.MainWindow"
        mc:Ignorable="d"
        Title="MelodyMaster" Height="740" Width="1280" Background="#FF464646" PreviewKeyDown="Window_PreviewKeyDown" Closing="Window_Closing">

    <Window.Resources>
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <LinearGradientBrush x:Key="ComboBox.Static.Background" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#FF404040" Offset="0.0"/>
            <GradientStop Color="#FF212121" Offset="1.0"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="ComboBox.Static.Border" Color="#FFACACAC"/>
        <SolidColorBrush x:Key="ComboBox.Static.Editable.Background" Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="ComboBox.Static.Editable.Border" Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="ComboBox.Static.Editable.Button.Background" Color="Transparent"/>
        <SolidColorBrush x:Key="ComboBox.Static.Editable.Button.Border" Color="Transparent"/>
        <SolidColorBrush x:Key="ComboBox.MouseOver.Glyph" Color="#FFFFFFFF"/>
        <LinearGradientBrush x:Key="ComboBox.MouseOver.Background" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#FF696969" Offset="0.0"/>
            <GradientStop Color="#FF454545" Offset="1.0"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="ComboBox.MouseOver.Border" Color="#FF333333"/>
        <SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Background" Color="#FF888888"/>
        <SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Border" Color="#FF7EB4EA"/>
        <LinearGradientBrush x:Key="ComboBox.MouseOver.Editable.Button.Background" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#FF333333" Offset="0.0"/>
            <GradientStop Color="#FF333333" Offset="1.0"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Button.Border" Color="#FF888888"/>
        <SolidColorBrush x:Key="ComboBox.Pressed.Glyph" Color="#FF000000"/>
        <LinearGradientBrush x:Key="ComboBox.Pressed.Background" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#FF5B5B5B" Offset="0.0"/>
            <GradientStop Color="#FF5B5B5B" Offset="1.0"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="ComboBox.Pressed.Border" Color="#FF569DE5"/>
        <SolidColorBrush x:Key="ComboBox.Pressed.Editable.Border" Color="#FF569DE5"/>
        <LinearGradientBrush x:Key="ComboBox.Pressed.Editable.Button.Background" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#FFDAEBFC" Offset="0.0"/>
            <GradientStop Color="#FFC4E0FC" Offset="1.0"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="ComboBox.Pressed.Editable.Button.Border" Color="#FF569DE5"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Glyph" Color="#FFBFBFBF"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Background" Color="#FFF0F0F0"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Border" Color="#FFD9D9D9"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Background" Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Border" Color="#FFBFBFBF"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Button.Background" Color="Transparent"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Button.Border" Color="Transparent"/>
        <SolidColorBrush x:Key="ComboBox.Static.Glyph" Color="#FFE8E8E8"/>
        <Style x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="ClickMode" Value="Press"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border x:Name="templateRoot" BorderBrush="{StaticResource ComboBox.Static.Border}" BorderThickness="{TemplateBinding BorderThickness}" Background="{StaticResource ComboBox.Static.Background}" SnapsToDevicePixels="true">
                            <Border x:Name="splitBorder" BorderBrush="Transparent" BorderThickness="1" HorizontalAlignment="Right" Margin="0" SnapsToDevicePixels="true" Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}">
                                <Path x:Name="arrow" Data="F1 M 0,0 L 2.667,2.66665 L 5.3334,0 L 5.3334,-1.78168 L 2.6667,0.88501 L0,-1.78168 L0,0 Z" Fill="{StaticResource ComboBox.Static.Glyph}" HorizontalAlignment="Center" Margin="0" VerticalAlignment="Center"/>
                            </Border>
                        </Border>
                        <ControlTemplate.Triggers>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="true"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Static.Editable.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Static.Editable.Border}"/>
                                <Setter Property="Background" TargetName="splitBorder" Value="{StaticResource ComboBox.Static.Editable.Button.Background}"/>
                                <Setter Property="BorderBrush" TargetName="splitBorder" Value="{StaticResource ComboBox.Static.Editable.Button.Border}"/>
                            </MultiDataTrigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Fill" TargetName="arrow" Value="{StaticResource ComboBox.MouseOver.Glyph}"/>
                            </Trigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="false"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.MouseOver.Border}"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.MouseOver.Editable.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.MouseOver.Editable.Border}"/>
                                <Setter Property="Background" TargetName="splitBorder" Value="{StaticResource ComboBox.MouseOver.Editable.Button.Background}"/>
                                <Setter Property="BorderBrush" TargetName="splitBorder" Value="{StaticResource ComboBox.MouseOver.Editable.Button.Border}"/>
                            </MultiDataTrigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Fill" TargetName="arrow" Value="{StaticResource ComboBox.Pressed.Glyph}"/>
                            </Trigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="false"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Pressed.Border}"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Pressed.Editable.Border}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Pressed.Editable.Border}"/>
                                <Setter Property="Background" TargetName="splitBorder" Value="{StaticResource ComboBox.Pressed.Editable.Button.Background}"/>
                                <Setter Property="BorderBrush" TargetName="splitBorder" Value="{StaticResource ComboBox.Pressed.Editable.Button.Border}"/>
                            </MultiDataTrigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Fill" TargetName="arrow" Value="{StaticResource ComboBox.Disabled.Glyph}"/>
                            </Trigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="false"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Disabled.Border}"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Disabled.Editable.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Disabled.Editable.Border}"/>
                                <Setter Property="Background" TargetName="splitBorder" Value="{StaticResource ComboBox.Disabled.Editable.Button.Background}"/>
                                <Setter Property="BorderBrush" TargetName="splitBorder" Value="{StaticResource ComboBox.Disabled.Editable.Button.Border}"/>
                            </MultiDataTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <ControlTemplate x:Key="ComboBoxTemplate" TargetType="{x:Type ComboBox}">
            <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0"/>
                </Grid.ColumnDefinitions>
                <Popup x:Name="PART_Popup" AllowsTransparency="true" Grid.ColumnSpan="2" IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Margin="1" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Placement="Bottom">
                    <Themes:SystemDropShadowChrome x:Name="shadow" Color="Transparent" MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{Binding ActualWidth, ElementName=templateRoot}">
                        <Border x:Name="dropDownBorder" BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}" BorderThickness="1" Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}">
                            <ScrollViewer x:Name="DropDownScrollViewer">
                                <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                                    <Canvas x:Name="canvas" HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                        <Rectangle x:Name="opaqueRect" Fill="#FF333333" Height="{Binding ActualHeight, ElementName=dropDownBorder}" Width="{Binding ActualWidth, ElementName=dropDownBorder}"/>
                                    </Canvas>
                                    <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                </Grid>
                            </ScrollViewer>
                        </Border>
                    </Themes:SystemDropShadowChrome>
                </Popup>
                <ToggleButton x:Name="toggleButton"  BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.ColumnSpan="2" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource ComboBoxToggleButton}"/>
                <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" Content="{TemplateBinding SelectionBoxItem}" ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" IsHitTestVisible="false" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="true">
                    <Setter Property="Margin" TargetName="shadow" Value="0,0,5,5"/>
                    <Setter Property="Color" TargetName="shadow" Value="#71000000"/>
                </Trigger>
                <Trigger Property="HasItems" Value="false">
                    <Setter Property="Height" TargetName="dropDownBorder" Value="95"/>
                </Trigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsGrouping" Value="true"/>
                        <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                </MultiTrigger>
                <Trigger Property="ScrollViewer.CanContentScroll" SourceName="DropDownScrollViewer" Value="false">
                    <Setter Property="Canvas.Top" TargetName="opaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
                    <Setter Property="Canvas.Left" TargetName="opaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <SolidColorBrush x:Key="TextBox.Static.Background" Color="#FFFFFFFF"/>
        <Style x:Key="ComboBoxEditableTextBox" TargetType="{x:Type TextBox}">
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="AllowDrop" Value="true"/>
            <Setter Property="MinWidth" Value="0"/>
            <Setter Property="MinHeight" Value="0"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <ScrollViewer x:Name="PART_ContentHost" Background="Transparent" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <ControlTemplate x:Key="ComboBoxEditableTemplate" TargetType="{x:Type ComboBox}">
            <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0"/>
                </Grid.ColumnDefinitions>
                <Popup x:Name="PART_Popup" AllowsTransparency="true" Grid.ColumnSpan="2" IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Placement="Bottom">
                    <Themes:SystemDropShadowChrome x:Name="shadow" Color="Transparent" MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{Binding ActualWidth, ElementName=templateRoot}">
                        <Border x:Name="dropDownBorder" BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}" BorderThickness="1" Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}">
                            <ScrollViewer x:Name="DropDownScrollViewer">
                                <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                                    <Canvas x:Name="canvas" HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                        <Rectangle x:Name="opaqueRect" Fill="{Binding Background, ElementName=dropDownBorder}" Height="{Binding ActualHeight, ElementName=dropDownBorder}" Width="{Binding ActualWidth, ElementName=dropDownBorder}"/>
                                    </Canvas>
                                    <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                </Grid>
                            </ScrollViewer>
                        </Border>
                    </Themes:SystemDropShadowChrome>
                </Popup>
                <ToggleButton x:Name="toggleButton" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.ColumnSpan="2" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource ComboBoxToggleButton}"/>
                <Border x:Name="border" Background="{StaticResource TextBox.Static.Background}" Margin="{TemplateBinding BorderThickness}">
                    <TextBox x:Name="PART_EditableTextBox" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" IsReadOnly="{Binding IsReadOnly, RelativeSource={RelativeSource TemplatedParent}}" Margin="{TemplateBinding Padding}" Style="{StaticResource ComboBoxEditableTextBox}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                </Border>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="IsEnabled" Value="false">
                    <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                </Trigger>
                <Trigger Property="IsKeyboardFocusWithin" Value="true">
                    <Setter Property="Foreground" Value="Black"/>
                </Trigger>
                <Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="true">
                    <Setter Property="Margin" TargetName="shadow" Value="0,0,5,5"/>
                    <Setter Property="Color" TargetName="shadow" Value="#71000000"/>
                </Trigger>
                <Trigger Property="HasItems" Value="false">
                    <Setter Property="Height" TargetName="dropDownBorder" Value="95"/>
                </Trigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsGrouping" Value="true"/>
                        <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                </MultiTrigger>
                <Trigger Property="ScrollViewer.CanContentScroll" SourceName="DropDownScrollViewer" Value="false">
                    <Setter Property="Canvas.Top" TargetName="opaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
                    <Setter Property="Canvas.Left" TargetName="opaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <Style x:Key="ComboBoxStyle1" TargetType="{x:Type ComboBox}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource ComboBox.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource ComboBox.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="Padding" Value="6,3,5,3"/>
            <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
            <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="Template" Value="{StaticResource ComboBoxTemplate}"/>
            <Style.Triggers>
                <Trigger Property="IsEditable" Value="true">
                    <Setter Property="IsTabStop" Value="false"/>
                    <Setter Property="Padding" Value="2"/>
                    <Setter Property="Template" Value="{StaticResource ComboBoxEditableTemplate}"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <!--Button style-->
        <LinearGradientBrush x:Key="Button.Static.Background" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#FF636363" Offset="0.0"/>
            <GradientStop Color="#FF212121" Offset="1.0"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FF333333"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="DarkGray"/>
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
        <Style x:Key="ButtonStyle1" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}"  CornerRadius="5,5,5,5"  BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border"  Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="#FF333333"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="SliderThumb.Static.Foreground" Color="#FF595959"/>
        <SolidColorBrush x:Key="SliderThumb.MouseOver.Background" Color="#FFDCECFC"/>
        <SolidColorBrush x:Key="SliderThumb.MouseOver.Border" Color="#FF7Eb4EA"/>
        <SolidColorBrush x:Key="SliderThumb.Pressed.Background" Color="#FFDAECFC"/>
        <SolidColorBrush x:Key="SliderThumb.Pressed.Border" Color="#FF569DE5"/>
        <SolidColorBrush x:Key="SliderThumb.Disabled.Background" Color="#FFF0F0F0"/>
        <SolidColorBrush x:Key="SliderThumb.Disabled.Border" Color="#FFD9D9D9"/>
        <SolidColorBrush x:Key="SliderThumb.Static.Background" Color="#FFF0F0F0"/>
        <SolidColorBrush x:Key="SliderThumb.Static.Border" Color="#FFACACAC"/>
        <ControlTemplate x:Key="SliderThumbHorizontalTop" TargetType="{x:Type Thumb}">
            <Grid HorizontalAlignment="Center" UseLayoutRounding="True" VerticalAlignment="Center">
                <Path x:Name="grip" Data="M 0,6 C0,6 5.5,0 5.5,0 5.5,0 11,6 11,6 11,6 11,18 11,18 11,18 0,18 0,18 0,18 0,6 0,6 z" Fill="{StaticResource SliderThumb.Static.Background}" Stretch="Fill" SnapsToDevicePixels="True" Stroke="{StaticResource SliderThumb.Static.Border}" StrokeThickness="1" UseLayoutRounding="True" VerticalAlignment="Center"/>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="IsMouseOver" Value="true">
                    <Setter Property="Fill" TargetName="grip" Value="{StaticResource SliderThumb.MouseOver.Background}"/>
                    <Setter Property="Stroke" TargetName="grip" Value="{StaticResource SliderThumb.MouseOver.Border}"/>
                </Trigger>
                <Trigger Property="IsDragging" Value="true">
                    <Setter Property="Fill" TargetName="grip" Value="{StaticResource SliderThumb.Pressed.Background}"/>
                    <Setter Property="Stroke" TargetName="grip" Value="{StaticResource SliderThumb.Pressed.Border}"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="false">
                    <Setter Property="Fill" TargetName="grip" Value="{StaticResource SliderThumb.Disabled.Background}"/>
                    <Setter Property="Stroke" TargetName="grip" Value="{StaticResource SliderThumb.Disabled.Border}"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <ControlTemplate x:Key="SliderThumbHorizontalBottom" TargetType="{x:Type Thumb}">
            <Grid HorizontalAlignment="Center" UseLayoutRounding="True" VerticalAlignment="Center">
                <Path x:Name="grip" Data="M 0,12 C0,12 5.5,18 5.5,18 5.5,18 11,12 11,12 11,12 11,0 11,0 11,0 0,0 0,0 0,0 0,12 0,12 z" Fill="{StaticResource SliderThumb.Static.Background}" Stretch="Fill" SnapsToDevicePixels="True" Stroke="{StaticResource SliderThumb.Static.Border}" StrokeThickness="1" UseLayoutRounding="True" VerticalAlignment="Center"/>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="IsMouseOver" Value="true">
                    <Setter Property="Fill" TargetName="grip" Value="{StaticResource SliderThumb.MouseOver.Background}"/>
                    <Setter Property="Stroke" TargetName="grip" Value="{StaticResource SliderThumb.MouseOver.Border}"/>
                </Trigger>
                <Trigger Property="IsDragging" Value="true">
                    <Setter Property="Fill" TargetName="grip" Value="{StaticResource SliderThumb.Pressed.Background}"/>
                    <Setter Property="Stroke" TargetName="grip" Value="{StaticResource SliderThumb.Pressed.Border}"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="false">
                    <Setter Property="Fill" TargetName="grip" Value="{StaticResource SliderThumb.Disabled.Background}"/>
                    <Setter Property="Stroke" TargetName="grip" Value="{StaticResource SliderThumb.Disabled.Border}"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <!--sliderBar color !-->
        <SolidColorBrush x:Key="SliderThumb.Track.Border" Color="#FF6D6D6D"/>
        <SolidColorBrush x:Key="SliderThumb.Track.Background" Color="#FFAFAFAF"/>
        <Style x:Key="RepeatButtonTransparent" TargetType="{x:Type RepeatButton}">
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Rectangle Fill="{TemplateBinding Background}" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <ControlTemplate x:Key="SliderThumbHorizontalDefault" TargetType="{x:Type Thumb}">
            <Grid HorizontalAlignment="Center" UseLayoutRounding="True" VerticalAlignment="Center">
                <Path x:Name="grip" Data="M 0,0 C0,0 11,0 11,0 11,0 11,18 11,18 11,18 0,18 0,18 0,18 0,0 0,0 z" Fill="{StaticResource SliderThumb.Static.Background}" Stretch="Fill" SnapsToDevicePixels="True" Stroke="{StaticResource SliderThumb.Static.Border}" StrokeThickness="1" UseLayoutRounding="True" VerticalAlignment="Center"/>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="IsMouseOver" Value="true">
                    <Setter Property="Fill" TargetName="grip" Value="{StaticResource SliderThumb.MouseOver.Background}"/>
                    <Setter Property="Stroke" TargetName="grip" Value="{StaticResource SliderThumb.MouseOver.Border}"/>
                </Trigger>
                <Trigger Property="IsDragging" Value="true">
                    <Setter Property="Fill" TargetName="grip" Value="{StaticResource SliderThumb.Pressed.Background}"/>
                    <Setter Property="Stroke" TargetName="grip" Value="{StaticResource SliderThumb.Pressed.Border}"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="false">
                    <Setter Property="Fill" TargetName="grip" Value="{StaticResource SliderThumb.Disabled.Background}"/>
                    <Setter Property="Stroke" TargetName="grip" Value="{StaticResource SliderThumb.Disabled.Border}"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <ControlTemplate x:Key="SliderHorizontal" TargetType="{x:Type Slider}">
            <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto" MinHeight="{TemplateBinding MinHeight}"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <TickBar x:Name="TopTick" Fill="{TemplateBinding Foreground}" Height="4" Margin="0,0,0,2" Placement="Top" Grid.Row="0" Visibility="Collapsed"/>
                    <TickBar x:Name="BottomTick" Fill="{TemplateBinding Foreground}" Height="4" Margin="0,2,0,0" Placement="Bottom" Grid.Row="2" Visibility="Collapsed"/>
                    <Border x:Name="TrackBackground" BorderBrush="{StaticResource SliderThumb.Track.Border}" BorderThickness="1" Background="{StaticResource SliderThumb.Track.Background}" Height="4.0" Margin="5,0" Grid.Row="1" VerticalAlignment="center">
                        <Canvas Margin="-6,-1">
                            <Rectangle x:Name="PART_SelectionRange" Fill="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" Height="4.0" Visibility="Hidden"/>
                        </Canvas>
                    </Border>
                    <Track x:Name="PART_Track" Grid.Row="1">
                        <Track.DecreaseRepeatButton>
                            <RepeatButton Command="{x:Static Slider.DecreaseLarge}" Style="{StaticResource RepeatButtonTransparent}"/>
                        </Track.DecreaseRepeatButton>
                        <Track.IncreaseRepeatButton>
                            <RepeatButton Command="{x:Static Slider.IncreaseLarge}" Style="{StaticResource RepeatButtonTransparent}"/>
                        </Track.IncreaseRepeatButton>
                        <Track.Thumb>
                            <Thumb x:Name="Thumb" Focusable="False" Height="18" OverridesDefaultStyle="True" Template="{StaticResource SliderThumbHorizontalDefault}" VerticalAlignment="Center" Width="11"/>
                        </Track.Thumb>
                    </Track>
                </Grid>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="TickPlacement" Value="TopLeft">
                    <Setter Property="Visibility" TargetName="TopTick" Value="Visible"/>
                    <Setter Property="Template" TargetName="Thumb" Value="{StaticResource SliderThumbHorizontalTop}"/>
                    <Setter Property="Margin" TargetName="TrackBackground" Value="5,2,5,0"/>
                </Trigger>
                <Trigger Property="TickPlacement" Value="BottomRight">
                    <Setter Property="Visibility" TargetName="BottomTick" Value="Visible"/>
                    <Setter Property="Template" TargetName="Thumb" Value="{StaticResource SliderThumbHorizontalBottom}"/>
                    <Setter Property="Margin" TargetName="TrackBackground" Value="5,0,5,2"/>
                </Trigger>
                <Trigger Property="TickPlacement" Value="Both">
                    <Setter Property="Visibility" TargetName="TopTick" Value="Visible"/>
                    <Setter Property="Visibility" TargetName="BottomTick" Value="Visible"/>
                </Trigger>
                <Trigger Property="IsSelectionRangeEnabled" Value="true">
                    <Setter Property="Visibility" TargetName="PART_SelectionRange" Value="Visible"/>
                </Trigger>
                <Trigger Property="IsKeyboardFocused" Value="true">
                    <Setter Property="Foreground" TargetName="Thumb" Value="Blue"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <ControlTemplate x:Key="SliderThumbVerticalLeft" TargetType="{x:Type Thumb}">
            <Grid HorizontalAlignment="Center" UseLayoutRounding="True" VerticalAlignment="Center">
                <Path x:Name="grip" Data="M 6,11 C6,11 0,5.5 0,5.5 0,5.5 6,0 6,0 6,0 18,0 18,0 18,0 18,11 18,11 18,11 6,11 6,11 z" Fill="{StaticResource SliderThumb.Static.Background}" Stretch="Fill" Stroke="{StaticResource SliderThumb.Static.Border}"/>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="IsMouseOver" Value="true">
                    <Setter Property="Fill" TargetName="grip" Value="{StaticResource SliderThumb.MouseOver.Background}"/>
                    <Setter Property="Stroke" TargetName="grip" Value="{StaticResource SliderThumb.MouseOver.Border}"/>
                </Trigger>
                <Trigger Property="IsDragging" Value="true">
                    <Setter Property="Fill" TargetName="grip" Value="{StaticResource SliderThumb.Pressed.Background}"/>
                    <Setter Property="Stroke" TargetName="grip" Value="{StaticResource SliderThumb.Pressed.Border}"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="false">
                    <Setter Property="Fill" TargetName="grip" Value="{StaticResource SliderThumb.Disabled.Background}"/>
                    <Setter Property="Stroke" TargetName="grip" Value="{StaticResource SliderThumb.Disabled.Border}"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <ControlTemplate x:Key="SliderThumbVerticalRight" TargetType="{x:Type Thumb}">
            <Grid HorizontalAlignment="Center" UseLayoutRounding="True" VerticalAlignment="Center">
                <Path x:Name="grip" Data="M 12,11 C12,11 18,5.5 18,5.5 18,5.5 12,0 12,0 12,0 0,0 0,0 0,0 0,11 0,11 0,11 12,11 12,11 z" Fill="{StaticResource SliderThumb.Static.Background}" Stretch="Fill" Stroke="{StaticResource SliderThumb.Static.Border}"/>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="IsMouseOver" Value="true">
                    <Setter Property="Fill" TargetName="grip" Value="{StaticResource SliderThumb.MouseOver.Background}"/>
                    <Setter Property="Stroke" TargetName="grip" Value="{StaticResource SliderThumb.MouseOver.Border}"/>
                </Trigger>
                <Trigger Property="IsDragging" Value="true">
                    <Setter Property="Fill" TargetName="grip" Value="{StaticResource SliderThumb.Pressed.Background}"/>
                    <Setter Property="Stroke" TargetName="grip" Value="{StaticResource SliderThumb.Pressed.Border}"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="false">
                    <Setter Property="Fill" TargetName="grip" Value="{StaticResource SliderThumb.Disabled.Background}"/>
                    <Setter Property="Stroke" TargetName="grip" Value="{StaticResource SliderThumb.Disabled.Border}"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <ControlTemplate x:Key="SliderThumbVerticalDefault" TargetType="{x:Type Thumb}">
            <Grid HorizontalAlignment="Center" UseLayoutRounding="True" VerticalAlignment="Center">
                <Path x:Name="grip" Data="M0.5,0.5 L18.5,0.5 18.5,11.5 0.5,11.5z" Fill="{StaticResource SliderThumb.Static.Background}" Stretch="Fill" Stroke="{StaticResource SliderThumb.Static.Border}"/>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="IsMouseOver" Value="true">
                    <Setter Property="Fill" TargetName="grip" Value="{StaticResource SliderThumb.MouseOver.Background}"/>
                    <Setter Property="Stroke" TargetName="grip" Value="{StaticResource SliderThumb.MouseOver.Border}"/>
                </Trigger>
                <Trigger Property="IsDragging" Value="true">
                    <Setter Property="Fill" TargetName="grip" Value="{StaticResource SliderThumb.Pressed.Background}"/>
                    <Setter Property="Stroke" TargetName="grip" Value="{StaticResource SliderThumb.Pressed.Border}"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="false">
                    <Setter Property="Fill" TargetName="grip" Value="{StaticResource SliderThumb.Disabled.Background}"/>
                    <Setter Property="Stroke" TargetName="grip" Value="{StaticResource SliderThumb.Disabled.Border}"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <ControlTemplate x:Key="SliderVertical" TargetType="{x:Type Slider}">
            <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition MinWidth="{TemplateBinding MinWidth}" Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <TickBar x:Name="TopTick" Grid.Column="0" Fill="{TemplateBinding Foreground}" Margin="0,0,2,0" Placement="Left" Visibility="Collapsed" Width="4"/>
                    <TickBar x:Name="BottomTick" Grid.Column="2" Fill="{TemplateBinding Foreground}" Margin="2,0,0,0" Placement="Right" Visibility="Collapsed" Width="4"/>
                    <Border x:Name="TrackBackground" BorderBrush="{StaticResource SliderThumb.Track.Border}" BorderThickness="1" Background="{StaticResource SliderThumb.Track.Background}" Grid.Column="1" HorizontalAlignment="center" Margin="0,5" Width="4.0">
                        <Canvas Margin="-1,-6">
                            <Rectangle x:Name="PART_SelectionRange" Fill="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" Visibility="Hidden" Width="4.0"/>
                        </Canvas>
                    </Border>
                    <Track x:Name="PART_Track" Grid.Column="1">
                        <Track.DecreaseRepeatButton>
                            <RepeatButton Command="{x:Static Slider.DecreaseLarge}" Style="{StaticResource RepeatButtonTransparent}"/>
                        </Track.DecreaseRepeatButton>
                        <Track.IncreaseRepeatButton>
                            <RepeatButton Command="{x:Static Slider.IncreaseLarge}" Style="{StaticResource RepeatButtonTransparent}"/>
                        </Track.IncreaseRepeatButton>
                        <Track.Thumb>
                            <Thumb x:Name="Thumb" Focusable="False" Height="11" OverridesDefaultStyle="True" Template="{StaticResource SliderThumbVerticalDefault}" VerticalAlignment="Top" Width="18"/>
                        </Track.Thumb>
                    </Track>
                </Grid>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="TickPlacement" Value="TopLeft">
                    <Setter Property="Visibility" TargetName="TopTick" Value="Visible"/>
                    <Setter Property="Template" TargetName="Thumb" Value="{StaticResource SliderThumbVerticalLeft}"/>
                    <Setter Property="Margin" TargetName="TrackBackground" Value="2,5,0,5"/>
                </Trigger>
                <Trigger Property="TickPlacement" Value="BottomRight">
                    <Setter Property="Visibility" TargetName="BottomTick" Value="Visible"/>
                    <Setter Property="Template" TargetName="Thumb" Value="{StaticResource SliderThumbVerticalRight}"/>
                    <Setter Property="Margin" TargetName="TrackBackground" Value="0,5,2,5"/>
                </Trigger>
                <Trigger Property="TickPlacement" Value="Both">
                    <Setter Property="Visibility" TargetName="TopTick" Value="Visible"/>
                    <Setter Property="Visibility" TargetName="BottomTick" Value="Visible"/>
                </Trigger>
                <Trigger Property="IsSelectionRangeEnabled" Value="true">
                    <Setter Property="Visibility" TargetName="PART_SelectionRange" Value="Visible"/>
                </Trigger>
                <Trigger Property="IsKeyboardFocused" Value="true">
                    <Setter Property="Foreground" TargetName="Thumb" Value="Blue"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <Style x:Key="SliderStyle1" TargetType="{x:Type Slider}">
            <Setter Property="Stylus.IsPressAndHoldEnabled" Value="false"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="Foreground" Value="{StaticResource SliderThumb.Static.Foreground}"/>
            <Setter Property="Template" Value="{StaticResource SliderHorizontal}"/>
            <Style.Triggers>
                <Trigger Property="Orientation" Value="Vertical">
                    <Setter Property="Template" Value="{StaticResource SliderVertical}"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="圆角矩形按钮" TargetType="{x:Type Button}">

            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}"  CornerRadius="33,33,33,33"  SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="#FF636262"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>

                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background2" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background2" Color="#FFBEE6FD"/>
        <SolidColorBrush x:Key="Button.Pressed.Background2" Color="#FFC4E5F6"/>
        <SolidColorBrush x:Key="PianoButton_White_MouseOver" Color="#FFEAEAEA"/>
        <Style x:Key="ButtonStyle_WhitePiano" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <!--White piano button -->
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource PianoButton_White_MouseOver}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource PianoButton_White_MouseOver}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background3" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background3" Color="#FFBEE6FD"/>
        <SolidColorBrush x:Key="Button.Pressed.Background3" Color="#FFC4E5F6"/>
        <Style x:Key="ButtonStyle_BlackPiano" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <!-- Black Piano Button-->
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--chordCombobox-->
        <Style x:Key="FocusVisual1">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <LinearGradientBrush x:Key="Combobox1.Static.Background" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#FFBDBDBD" Offset="0.0"/>
            <GradientStop Color="#FFBDBDBD" Offset="1.0"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="Combobox1.Static.Border" Color="#FFBDBDBD"/>
        <SolidColorBrush x:Key="Combobox1.Static.Editable.Background" Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="Combobox1.Static.Editable.Border" Color="#FFABADB3"/>
        <SolidColorBrush x:Key="Combobox1.Static.Editable.Button.Background" Color="Transparent"/>
        <SolidColorBrush x:Key="Combobox1.Static.Editable.Button.Border" Color="Transparent"/>
        <SolidColorBrush x:Key="Combobox1.MouseOver.Glyph" Color="#FF000000"/>
        <LinearGradientBrush x:Key="Combobox1.MouseOver.Background" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#FFD1D1D1" Offset="0.0"/>
            <GradientStop Color="#FFD1D1D1" Offset="1.0"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="Combobox1.MouseOver.Border" Color="#FFD1D1D1"/>
        <SolidColorBrush x:Key="Combobox1.MouseOver.Editable.Background" Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="Combobox1.MouseOver.Editable.Border" Color="#FF7EB4EA"/>
        <LinearGradientBrush x:Key="Combobox1.MouseOver.Editable.Button.Background" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#FFEBF4FC" Offset="0.0"/>
            <GradientStop Color="#FFDCECFC" Offset="1.0"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="Combobox1.MouseOver.Editable.Button.Border" Color="#FFCDCDCD"/>
        <SolidColorBrush x:Key="Combobox1.Pressed.Glyph" Color="#FF000000"/>
        <LinearGradientBrush x:Key="Combobox1.Pressed.Background" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#FFBDBDBD" Offset="0.0"/>
            <GradientStop Color="#FFBDBDBD" Offset="1.0"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="Combobox1.Pressed.Border" Color="#FF569DE5"/>
        <SolidColorBrush x:Key="Combobox1.Pressed.Editable.Background" Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="Combobox1.Pressed.Editable.Border" Color="#FF569DE5"/>
        <LinearGradientBrush x:Key="Combobox1.Pressed.Editable.Button.Background" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#FFDAEBFC" Offset="0.0"/>
            <GradientStop Color="#FFC4E0FC" Offset="1.0"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="Combobox1.Pressed.Editable.Button.Border" Color="#FF569DE5"/>
        <SolidColorBrush x:Key="Combobox1.Disabled.Glyph" Color="#FFBFBFBF"/>
        <SolidColorBrush x:Key="Combobox1.Disabled.Background" Color="#FFF0F0F0"/>
        <SolidColorBrush x:Key="Combobox1.Disabled.Border" Color="#FFD9D9D9"/>
        <SolidColorBrush x:Key="Combobox1.Disabled.Editable.Background" Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="Combobox1.Disabled.Editable.Border" Color="#FFBFBFBF"/>
        <SolidColorBrush x:Key="Combobox1.Disabled.Editable.Button.Background" Color="Transparent"/>
        <SolidColorBrush x:Key="Combobox1.Disabled.Editable.Button.Border" Color="Transparent"/>
        <SolidColorBrush x:Key="Combobox1.Static.Glyph" Color="#FFBDBDBD"/>
        <Style x:Key="ComboBoxToggleButton1" TargetType="{x:Type ToggleButton}">
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="ClickMode" Value="Press"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border x:Name="templateRoot" BorderBrush="{StaticResource Combobox1.Static.Border}" BorderThickness="{TemplateBinding BorderThickness}" Background="{StaticResource Combobox1.Static.Background}" SnapsToDevicePixels="true">
                            <Border x:Name="splitBorder" BorderBrush="Transparent" BorderThickness="1" HorizontalAlignment="Right" Margin="0" SnapsToDevicePixels="true" Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}">
                                <Path x:Name="arrow" Data="F1 M 0,0 L 2.667,2.66665 L 5.3334,0 L 5.3334,-1.78168 L 2.6667,0.88501 L0,-1.78168 L0,0 Z" Fill="{StaticResource Combobox1.Static.Glyph}" HorizontalAlignment="Center" Margin="0" VerticalAlignment="Center"/>
                            </Border>
                        </Border>
                        <ControlTemplate.Triggers>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="true"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource Combobox1.Static.Editable.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource Combobox1.Static.Editable.Border}"/>
                                <Setter Property="Background" TargetName="splitBorder" Value="{StaticResource Combobox1.Static.Editable.Button.Background}"/>
                                <Setter Property="BorderBrush" TargetName="splitBorder" Value="{StaticResource Combobox1.Static.Editable.Button.Border}"/>
                            </MultiDataTrigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Fill" TargetName="arrow" Value="{StaticResource Combobox1.MouseOver.Glyph}"/>
                            </Trigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="false"/>

                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource Combobox1.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource Combobox1.MouseOver.Border}"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource Combobox1.MouseOver.Editable.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource Combobox1.MouseOver.Editable.Border}"/>
                                <Setter Property="Background" TargetName="splitBorder" Value="{StaticResource Combobox1.MouseOver.Editable.Button.Background}"/>
                                <Setter Property="BorderBrush" TargetName="splitBorder" Value="{StaticResource Combobox1.MouseOver.Editable.Button.Border}"/>
                            </MultiDataTrigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Fill" TargetName="arrow" Value="{StaticResource Combobox1.Pressed.Glyph}"/>
                            </Trigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="false"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource Combobox1.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource Combobox1.Pressed.Border}"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource Combobox1.Pressed.Editable.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource Combobox1.Pressed.Editable.Border}"/>
                                <Setter Property="Background" TargetName="splitBorder" Value="{StaticResource Combobox1.Pressed.Editable.Button.Background}"/>
                                <Setter Property="BorderBrush" TargetName="splitBorder" Value="{StaticResource Combobox1.Pressed.Editable.Button.Border}"/>
                            </MultiDataTrigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Fill" TargetName="arrow" Value="{StaticResource Combobox1.Disabled.Glyph}"/>
                            </Trigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="false"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource Combobox1.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource Combobox1.Disabled.Border}"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource Combobox1.Disabled.Editable.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource Combobox1.Disabled.Editable.Border}"/>
                                <Setter Property="Background" TargetName="splitBorder" Value="{StaticResource Combobox1.Disabled.Editable.Button.Background}"/>
                                <Setter Property="BorderBrush" TargetName="splitBorder" Value="{StaticResource Combobox1.Disabled.Editable.Button.Border}"/>
                            </MultiDataTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <ControlTemplate x:Key="ComboBoxTemplate1" TargetType="{x:Type ComboBox}">
            <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0"/>
                </Grid.ColumnDefinitions>
                <Popup x:Name="PART_Popup" AllowsTransparency="true" Grid.ColumnSpan="2" IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Margin="1" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Placement="Bottom">
                    <Themes:SystemDropShadowChrome x:Name="shadow" Color="Transparent" MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{Binding ActualWidth, ElementName=templateRoot}">
                        <Border x:Name="dropDownBorder" BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}" BorderThickness="1" Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}">
                            <ScrollViewer x:Name="DropDownScrollViewer">
                                <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                                    <Canvas x:Name="canvas" HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                        <Rectangle x:Name="opaqueRect" Fill="#FFD1D1D1" Height="{Binding ActualHeight, ElementName=dropDownBorder}" Width="{Binding ActualWidth, ElementName=dropDownBorder}"/>
                                    </Canvas>
                                    <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                </Grid>
                            </ScrollViewer>
                        </Border>
                    </Themes:SystemDropShadowChrome>
                </Popup>
                <ToggleButton x:Name="toggleButton" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.ColumnSpan="2" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource ComboBoxToggleButton1}"/>

                <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" Content="{TemplateBinding SelectionBoxItem}" ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" IsHitTestVisible="false" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" OpacityMask="Black"/>

            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="true">
                    <Setter Property="Margin" TargetName="shadow" Value="0,0,5,5"/>
                    <Setter Property="Color" TargetName="shadow" Value="#71000000"/>
                </Trigger>
                <Trigger Property="HasItems" Value="false">
                    <Setter Property="Height" TargetName="dropDownBorder" Value="95"/>
                </Trigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsGrouping" Value="true"/>
                        <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                </MultiTrigger>
                <Trigger Property="ScrollViewer.CanContentScroll" SourceName="DropDownScrollViewer" Value="false">
                    <Setter Property="Canvas.Top" TargetName="opaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
                    <Setter Property="Canvas.Left" TargetName="opaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <SolidColorBrush x:Key="TextBox1.Static.Background" Color="#FFFFFFFF"/>
        <Style x:Key="ComboBoxEditableTextBox1" TargetType="{x:Type TextBox}">
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="AllowDrop" Value="true"/>
            <Setter Property="MinWidth" Value="0"/>
            <Setter Property="MinHeight" Value="0"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <ScrollViewer x:Name="PART_ContentHost" Background="Transparent" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <ControlTemplate x:Key="ComboBoxEditableTemplate1" TargetType="{x:Type ComboBox}">
            <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0"/>
                </Grid.ColumnDefinitions>
                <Popup x:Name="PART_Popup" AllowsTransparency="true" Grid.ColumnSpan="2" IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Placement="Bottom">
                    <Themes:SystemDropShadowChrome x:Name="shadow" Color="Transparent" MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{Binding ActualWidth, ElementName=templateRoot}">
                        <Border x:Name="dropDownBorder" BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}" BorderThickness="1" Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}">
                            <ScrollViewer x:Name="DropDownScrollViewer">
                                <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                                    <Canvas x:Name="canvas" HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                        <Rectangle x:Name="opaqueRect" Fill="{Binding Background, ElementName=dropDownBorder}" Height="{Binding ActualHeight, ElementName=dropDownBorder}" Width="{Binding ActualWidth, ElementName=dropDownBorder}"/>
                                    </Canvas>
                                    <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                </Grid>
                            </ScrollViewer>
                        </Border>
                    </Themes:SystemDropShadowChrome>
                </Popup>
                <ToggleButton x:Name="toggleButton" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.ColumnSpan="2" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource ComboBoxToggleButton1}"/>
                <Border x:Name="border" Background="{StaticResource TextBox1.Static.Background}" Margin="{TemplateBinding BorderThickness}">
                    <TextBox x:Name="PART_EditableTextBox" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" IsReadOnly="{Binding IsReadOnly, RelativeSource={RelativeSource TemplatedParent}}" Margin="{TemplateBinding Padding}" Style="{StaticResource ComboBoxEditableTextBox1}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                </Border>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="IsEnabled" Value="false">
                    <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                </Trigger>
                <Trigger Property="IsKeyboardFocusWithin" Value="true">
                    <Setter Property="Foreground" Value="Black"/>
                </Trigger>
                <Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="true">
                    <Setter Property="Margin" TargetName="shadow" Value="0,0,5,5"/>
                    <Setter Property="Color" TargetName="shadow" Value="#71000000"/>
                </Trigger>
                <Trigger Property="HasItems" Value="false">
                    <Setter Property="Height" TargetName="dropDownBorder" Value="95"/>
                </Trigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsGrouping" Value="true"/>
                        <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                </MultiTrigger>
                <Trigger Property="ScrollViewer.CanContentScroll" SourceName="DropDownScrollViewer" Value="false">
                    <Setter Property="Canvas.Top" TargetName="opaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
                    <Setter Property="Canvas.Left" TargetName="opaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <Style x:Key="ComboBox-ChordShow" TargetType="{x:Type ComboBox}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual1}"/>
            <Setter Property="Background" Value="{StaticResource Combobox1.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Combobox1.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="Padding" Value="6,3,5,3"/>
            <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
            <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="Template" Value="{StaticResource ComboBoxTemplate1}"/>
            <Style.Triggers>
                <Trigger Property="IsEditable" Value="true">
                    <Setter Property="IsTabStop" Value="false"/>
                    <Setter Property="Padding" Value="2"/>
                    <Setter Property="Template" Value="{StaticResource ComboBoxEditableTemplate1}"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <!--FButton模板-->
        <ControlTemplate x:Key="FButton_Template" TargetType="{x:Type local:FButton}">
            <Border x:Name="border" Background="{Binding Background, RelativeSource={RelativeSource Mode=TemplatedParent}}" 
        		Height="{Binding Height, RelativeSource={RelativeSource Mode=TemplatedParent}}" 
        		CornerRadius="{Binding CornerRadius, RelativeSource={RelativeSource Mode=TemplatedParent}}" 
        		Width="{Binding Width, RelativeSource={RelativeSource Mode=TemplatedParent}}">
                <!--Icon/Text-->
                <StackPanel Orientation="Horizontal" VerticalAlignment="Center" 
        			Margin="{TemplateBinding Padding}"
        			HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}">
                    <TextBlock x:Name="icon"  Margin="{Binding FIconMargin, RelativeSource={RelativeSource Mode=TemplatedParent}}" 
        				RenderTransformOrigin="0.5,0.5" 
        				Text="{Binding FIcon, RelativeSource={RelativeSource Mode=TemplatedParent}}" 
        				FontSize="{Binding FIconSize, RelativeSource={RelativeSource Mode=TemplatedParent}}" 
        				Foreground="{Binding Foreground, RelativeSource={RelativeSource Mode=TemplatedParent}}">
                        <TextBlock.RenderTransform>
                            <RotateTransform x:Name="transIcon" Angle="0"/>
                        </TextBlock.RenderTransform>
                    </TextBlock>

                    <TextBlock VerticalAlignment="Center"  x:Name="txt" 
        				TextDecorations="{Binding ContentDecorations, RelativeSource={RelativeSource Mode=TemplatedParent}}" 
        				Text="{Binding Content, RelativeSource={RelativeSource Mode=TemplatedParent}}" 
        				FontSize="{Binding FontSize, RelativeSource={RelativeSource Mode=TemplatedParent}}" 
        				Foreground="{Binding Foreground, RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
                </StackPanel>
            </Border>
            <!--触发器-->
            <ControlTemplate.Triggers>
                <!--设置鼠标进入时的背景、前景样式-->
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{Binding MouseOverBackground, RelativeSource={RelativeSource Mode=TemplatedParent}}" TargetName="border" />
                    <Setter Property="Foreground" Value="{Binding MouseOverForeground, RelativeSource={RelativeSource Mode=TemplatedParent}}" TargetName="icon"/>
                    <Setter Property="Foreground" Value="{Binding MouseOverForeground, RelativeSource={RelativeSource Mode=TemplatedParent}}" TargetName="txt"/>
                </Trigger>
                <!--Ficon的动画触发器-->
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsMouseOver" Value="true"/>
                        <Condition Property="AllowsAnimation" Value="true"/>
                    </MultiTrigger.Conditions>
                    <MultiTrigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation Storyboard.TargetName="transIcon" Storyboard.TargetProperty="Angle" To="180" Duration="0:0:0.2" />
                            </Storyboard>
                        </BeginStoryboard>
                    </MultiTrigger.EnterActions>
                    <MultiTrigger.ExitActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation Storyboard.TargetName="transIcon" Storyboard.TargetProperty="Angle" To="0" Duration="0:0:0.2" />
                            </Storyboard>
                        </BeginStoryboard>
                    </MultiTrigger.ExitActions>
                </MultiTrigger>
                <!--鼠标按下时的前景、背景样式-->
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" Value="{Binding PressedBackground, RelativeSource={RelativeSource Mode=TemplatedParent}}" TargetName="border" />
                    <Setter Property="Foreground" Value="{Binding PressedForeground, RelativeSource={RelativeSource Mode=TemplatedParent}}" TargetName="icon"/>
                    <Setter Property="Foreground" Value="{Binding PressedForeground, RelativeSource={RelativeSource Mode=TemplatedParent}}" TargetName="txt"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="false">
                    <Setter Property="Opacity" Value="0.5" TargetName="border"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <SolidColorBrush x:Key="ComboBox.Static.Editable.Border2" Color="#FFABADB3"/>
        <SolidColorBrush x:Key="ComboBox.MouseOver.Glyph2" Color="#FF000000"/>
        <LinearGradientBrush x:Key="ComboBox.MouseOver.Background2" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#FFECF4FC" Offset="0.0"/>
            <GradientStop Color="#FFDCECFC" Offset="1.0"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="ComboBox.MouseOver.Border2" Color="#FF7EB4EA"/>
        <SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Background2" Color="#FFFFFFFF"/>
        <LinearGradientBrush x:Key="ComboBox.MouseOver.Editable.Button.Background2" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#FFEBF4FC" Offset="0.0"/>
            <GradientStop Color="#FFDCECFC" Offset="1.0"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Button.Border2" Color="#FF7EB4EA"/>
        <LinearGradientBrush x:Key="ComboBox.Pressed.Background2" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#FFDAECFC" Offset="0.0"/>
            <GradientStop Color="#FFC4E0FC" Offset="1.0"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="ComboBox.Static.Glyph2" Color="#FF606060"/>
        <Style x:Key="ComboBoxToggleButton2" TargetType="{x:Type ToggleButton}">
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="ClickMode" Value="Press"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border x:Name="templateRoot" SnapsToDevicePixels="true" Background="Red" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{StaticResource ComboBox.Static.Border}">
                            <Border x:Name="splitBorder" Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" SnapsToDevicePixels="true" Margin="0" HorizontalAlignment="Right" BorderThickness="1" BorderBrush="Transparent">
                                <Path x:Name="arrow" VerticalAlignment="Center" Margin="0" HorizontalAlignment="Center" Fill="{StaticResource ComboBox.Static.Glyph2}" Data="F1 M 0,0 L 2.667,2.66665 L 5.3334,0 L 5.3334,-1.78168 L 2.6667,0.88501 L0,-1.78168 L0,0 Z"/>
                            </Border>
                        </Border>
                        <ControlTemplate.Triggers>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="true"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Static.Editable.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Static.Editable.Border2}"/>
                                <Setter Property="Background" TargetName="splitBorder" Value="{StaticResource ComboBox.Static.Editable.Button.Background}"/>
                                <Setter Property="BorderBrush" TargetName="splitBorder" Value="{StaticResource ComboBox.Static.Editable.Button.Border}"/>
                            </MultiDataTrigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Fill" TargetName="arrow" Value="{StaticResource ComboBox.MouseOver.Glyph2}"/>
                            </Trigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="false"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.MouseOver.Background2}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.MouseOver.Border2}"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.MouseOver.Editable.Background2}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.MouseOver.Editable.Border}"/>
                                <Setter Property="Background" TargetName="splitBorder" Value="{StaticResource ComboBox.MouseOver.Editable.Button.Background2}"/>
                                <Setter Property="BorderBrush" TargetName="splitBorder" Value="{StaticResource ComboBox.MouseOver.Editable.Button.Border2}"/>
                            </MultiDataTrigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Fill" TargetName="arrow" Value="{StaticResource ComboBox.Pressed.Glyph}"/>
                            </Trigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="false"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Pressed.Background2}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Pressed.Border}"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Pressed.Editable.Button.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Pressed.Editable.Border}"/>
                                <Setter Property="Background" TargetName="splitBorder" Value="{StaticResource ComboBox.Pressed.Editable.Button.Background}"/>
                                <Setter Property="BorderBrush" TargetName="splitBorder" Value="{StaticResource ComboBox.Pressed.Editable.Button.Border}"/>
                            </MultiDataTrigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Fill" TargetName="arrow" Value="{StaticResource ComboBox.Disabled.Glyph}"/>
                            </Trigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="false"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Disabled.Border}"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Disabled.Editable.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Disabled.Editable.Border}"/>
                                <Setter Property="Background" TargetName="splitBorder" Value="{StaticResource ComboBox.Disabled.Editable.Button.Background}"/>
                                <Setter Property="BorderBrush" TargetName="splitBorder" Value="{StaticResource ComboBox.Disabled.Editable.Button.Border}"/>
                            </MultiDataTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <ControlTemplate x:Key="ComboBoxTemplate2" TargetType="{x:Type ComboBox}">
            <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0"/>
                </Grid.ColumnDefinitions>
                <Popup x:Name="PART_Popup" AllowsTransparency="true" Grid.ColumnSpan="2" IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Margin="1" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Placement="Bottom">
                    <Themes:SystemDropShadowChrome x:Name="shadow" Color="Transparent" MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{Binding ActualWidth, ElementName=templateRoot}">
                        <Border x:Name="dropDownBorder" BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}" BorderThickness="1" Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}">
                            <ScrollViewer x:Name="DropDownScrollViewer">
                                <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                                    <Canvas x:Name="canvas" HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                        <Rectangle x:Name="opaqueRect" Fill="{Binding Background, ElementName=dropDownBorder}" Height="{Binding ActualHeight, ElementName=dropDownBorder}" Width="{Binding ActualWidth, ElementName=dropDownBorder}"/>
                                    </Canvas>
                                    <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                </Grid>
                            </ScrollViewer>
                        </Border>
                    </Themes:SystemDropShadowChrome>
                </Popup>
                <ToggleButton x:Name="toggleButton" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.ColumnSpan="2" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource ComboBoxToggleButton2}"/>
                <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" Content="{TemplateBinding SelectionBoxItem}" ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" IsHitTestVisible="false" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="true">
                    <Setter Property="Margin" TargetName="shadow" Value="0,0,5,5"/>
                    <Setter Property="Color" TargetName="shadow" Value="#71000000"/>
                </Trigger>
                <Trigger Property="HasItems" Value="false">
                    <Setter Property="Height" TargetName="dropDownBorder" Value="95"/>
                </Trigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsGrouping" Value="true"/>
                        <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                </MultiTrigger>
                <Trigger Property="ScrollViewer.CanContentScroll" SourceName="DropDownScrollViewer" Value="false">
                    <Setter Property="Canvas.Top" TargetName="opaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
                    <Setter Property="Canvas.Left" TargetName="opaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <!--和弦 combobox-->
        <Style x:Key="ComboBoxStyle_ChordShow" TargetType="{x:Type ComboBox}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="Red"/>
            <Setter Property="BorderBrush" Value="{StaticResource ComboBox.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="Padding" Value="6,3,5,3"/>
            <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
            <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="Template" Value="{StaticResource ComboBoxTemplate}"/>
            <Style.Triggers>
                <Trigger Property="IsEditable" Value="true">
                    <Setter Property="IsTabStop" Value="false"/>
                    <Setter Property="Padding" Value="2"/>
                    <Setter Property="Template" Value="{StaticResource ComboBoxEditableTemplate}"/>
                </Trigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>
    <!-- 主界面行列定义-->
    <Grid x:Name="mainWindow" Background="#FF1A1A1D" Margin="3" Height="auto" Width="auto" >
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="224*"/>
            <ColumnDefinition Width="1045*"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="18*"/>
            <RowDefinition Height="54*"/>
            <RowDefinition Height="399*"/>
            <RowDefinition Height="215*"/>
        </Grid.RowDefinitions>

        <Grid Grid.ColumnSpan="2" Margin="0,0,0,4" Grid.RowSpan="2" d:LayoutOverrides="LeftMargin, RightMargin, TopMargin, BottomMargin">
            <Grid.Background>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    <GradientStop Color="#FF434343" Offset="0.997"/>
                    <GradientStop Color="#FF8B8989"/>
                </LinearGradientBrush>
            </Grid.Background>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="147*"/>
                <ColumnDefinition Width="101*"/>
                <ColumnDefinition Width="190*"/>
                <ColumnDefinition Width="192*"/>
            </Grid.ColumnDefinitions>
            <Grid Grid.Column="2" Margin="8">
                <Grid.RowDefinitions>
                    <RowDefinition Height="2*"/>
                    <RowDefinition Height="1*"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="1*"/>
                    <ColumnDefinition Width="1*"/>
                    <ColumnDefinition Width="1*"/>
                </Grid.ColumnDefinitions>
                <Grid.Background>
                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                        <GradientStop Color="#FF5E5D5D" Offset="0"/>
                        <GradientStop Color="#FF242424" Offset="0.544"/>
                        <GradientStop Color="#FF3D3D3D" Offset="1"/>
                    </LinearGradientBrush>
                </Grid.Background>
                <Border BorderThickness="2" Margin="-3" Grid.RowSpan="2" Grid.ColumnSpan="3" CornerRadius="3">
                    <Border.BorderBrush>
                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                            <GradientStop Color="Black" Offset="0.885"/>
                            <GradientStop Color="#FF515151"/>
                        </LinearGradientBrush>
                    </Border.BorderBrush>
                </Border>
                <Rectangle Fill="Black" Stroke="Black" Grid.ColumnSpan="3" Opacity="0.1" Margin="0,0,0,-9.019" Height="25.037" VerticalAlignment="Bottom"/>
                <TextBlock x:Name="upWin_Tone" TextAlignment="Center" Text="C" HorizontalAlignment="Center" Foreground="#FFCFCFCF" FontSize="18.667" Margin="-3,9,0,7" Width="125" Grid.RowSpan="2"/>
                <TextBlock x:Name="upWin_Name" TextAlignment="Center" Text="New Music" Grid.Column="1" HorizontalAlignment="Center" Foreground="#FFCFCFCF" FontSize="18.667" Margin="0,9,0,5" Grid.RowSpan="2" Width="122"/>
                <TextBlock x:Name="upWin_Speed" TextAlignment="Center" Text="100" Grid.Column="2" HorizontalAlignment="Center" Foreground="#FFCFCFCF" FontSize="18.667" Margin="0,9.019,0,6.998" Width="122.238" Grid.RowSpan="2"/>

                <TextBlock Text="Tone" TextAlignment="Center" Grid.Row="1" Foreground="#FF828282"  HorizontalAlignment="Center" Width="125.238" Margin="-3,0,0,0" />
                <TextBlock Text="Name" TextAlignment="Center" Grid.Row="1" Grid.Column="1" Foreground="#FF828282"  HorizontalAlignment="Center" Margin="0.119,0" Width="122" />
                <TextBlock Text="Speed" TextAlignment="Center"  Grid.Row="1" Grid.Column="2" Foreground="#FF828282"  HorizontalAlignment="Center" Width="122.238" />
            </Grid>

            <Grid Grid.Column="1" HorizontalAlignment="Stretch"  >
                <Grid.RowDefinitions>
                    <RowDefinition/>
                    <RowDefinition/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="167*"/>
                    <ColumnDefinition Width="41*"/>
                </Grid.ColumnDefinitions>

                <Button x:Name="button_UpTone" Content="+" Style="{DynamicResource ButtonStyle1}" Margin="0,4,0,7" Foreground="#FFC8C7C8" BorderThickness="0" Click="button_UpTone_Click" Grid.Column="1" FontWeight="Bold">
                    <Button.Background>
                        <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                            <GradientStop Color="#FF7D7D7D" Offset="0"/>
                            <GradientStop Color="#FF212121" Offset="1"/>
                        </LinearGradientBrush>
                    </Button.Background>
                </Button>
                <Button x:Name="button_DownTone" Content="-" Margin="0,4,0,7" Click="button_DownTone_Click" Style="{DynamicResource ButtonStyle1}" BorderThickness="0" Foreground="#FFC8C7C8" Grid.Column="1" Grid.Row="1" FontWeight="Bold">
                    <Button.Background>
                        <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                            <GradientStop Color="#FF666666" Offset="0"/>
                            <GradientStop Color="#FF212121" Offset="1"/>
                        </LinearGradientBrush>
                    </Button.Background>
                </Button>

                <Button x:Name="appBarButton_start"  Content ="play" HorizontalAlignment="Stretch" Margin="8,8,27,8" BorderThickness="2"  Click="appBarButton_start_Click" Style="{DynamicResource 圆角矩形按钮}" Foreground="#FFC8C7C8" Grid.RowSpan="2" GotFocus="appBarButton_start_GotFocus" FontSize="18.667" FontFamily="Segoe Script">
                    <Button.Background>
                        <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                            <GradientStop Color="#FF707070" Offset="0"/>
                            <GradientStop Color="#FF212121" Offset="1"/>
                        </LinearGradientBrush>
                    </Button.Background>

                    <Button.BorderBrush>
                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                            <GradientStop Color="Black" Offset="0"/>
                            <GradientStop Color="White" Offset="1"/>
                        </LinearGradientBrush>
                    </Button.BorderBrush>
                </Button>

            </Grid>
            <Grid Grid.Column="3" Margin="37.5,10,111,10">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="42*"/>
                    <ColumnDefinition Width="167*"/>
                    <ColumnDefinition Width="31*"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="37*"/>
                    <RowDefinition Height="35*"/>
                </Grid.RowDefinitions>

                <Border BorderThickness="2" Margin="-5"  Grid.RowSpan="2" Grid.ColumnSpan="3" CornerRadius="6" Opacity="0.5">
                    <Border.BorderBrush>
                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                            <GradientStop Color="Black" Offset="1"/>
                            <GradientStop Color="#FF4B4B4B"/>
                        </LinearGradientBrush>
                    </Border.BorderBrush>
                    <Border.Background>
                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                            <GradientStop Color="Black" Offset="0.51"/>
                            <GradientStop Color="#FF494949"/>
                            <GradientStop Color="#FF494949" Offset="1"/>
                        </LinearGradientBrush>
                    </Border.Background>
                </Border>

                <TextBlock Text="Speed" Foreground="#FFC2C2C2" Margin="10,5,10,0" FontSize="8" />
                <TextBlock Text="Volume" Grid.Row="1" Foreground="#FFC2C2C2" Margin="10,5,10,0" FontSize="8" />
                <TextBlock x:Name="textBlock_Volume" Text="100" Foreground="#FFC8C7C8" Grid.Column="2" Grid.Row="1" Margin="-2.131,3.735,10,-3.666" FontSize="9.333" />
                <Slider x:Name="slider1" Value ="100"  Grid.Row="1"  Minimum="0" Maximum="100" ValueChanged="slider1_ValueChanged" Style="{DynamicResource SliderStyle1}" Margin="-17.211,-0.106,5.121,-1.937" Grid.Column="1" RenderTransformOrigin="0.5,0.5">
                    <Slider.RenderTransform>
                        <TransformGroup>
                            <ScaleTransform ScaleX="0.7" ScaleY="0.7"/>
                            <SkewTransform/>
                            <RotateTransform/>
                            <TranslateTransform/>
                        </TransformGroup>
                    </Slider.RenderTransform>
                </Slider>
                <TextBlock x:Name="textBlock_Beat" Text="100" Foreground="#FFC8C7C8" Grid.Column="2" Margin="-2.131,3.485,10,1.334" FontSize="9.333"/>
                <Slider x:Name="slider2" Value ="100" Minimum="50" Maximum="180" ValueChanged="slider2_ValueChanged" Style="{DynamicResource SliderStyle1}" Grid.Column="1" RenderTransformOrigin="0.5,0.5" Margin="-17.834,-0.938,-0.5,-3.437">
                    <Slider.RenderTransform>
                        <TransformGroup>
                            <ScaleTransform ScaleX="0.7" ScaleY="0.7"/>
                            <SkewTransform/>
                            <RotateTransform/>
                            <TranslateTransform/>
                        </TransformGroup>
                    </Slider.RenderTransform>
                </Slider>
            </Grid>
            <Grid>
                <Grid x:Name="Duration_StackPanel" Height="45" Width="150" Margin="0,0,60,1" HorizontalAlignment="Center" VerticalAlignment="Center" >
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="1*"/>
                        <ColumnDefinition Width="1*"/>
                        <ColumnDefinition Width="1*"/>
                        <ColumnDefinition Width="1*"/>
                        <ColumnDefinition Width="1*"/>
                    </Grid.ColumnDefinitions>

                    <Border Grid.ColumnSpan="5" Margin="1" BorderThickness="1.5" CornerRadius="5" >
                        <Border.BorderBrush>
                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                <GradientStop Color="Black" Offset="1"/>
                                <GradientStop Color="#FF4B4B4B"/>
                            </LinearGradientBrush>
                        </Border.BorderBrush>

                    </Border>

                    <Label x:Name="label2_Duration" Foreground="LightGray" MouseDown="label2_Duration_MouseDown">
                        <Label.Background>
                            <ImageBrush ImageSource="Icons/Note/note-black-1_16.png"/>
                        </Label.Background>
                    </Label>
                    <Label x:Name="label3_Duration" Grid.Column="1" Foreground="LightGray" MouseDown="label3_Duration_MouseDown">
                        <Label.Background>
                            <ImageBrush ImageSource="Icons/Note/note-black-1_8.png"/>
                        </Label.Background>
                    </Label>
                    <Label x:Name="label4_Duration"  Grid.Column="2" Foreground="LightGray" MouseDown="label4_Duration_MouseDown">
                        <Label.Background>
                            <ImageBrush ImageSource="Icons/Note/note-black-1_4.png"/>
                        </Label.Background>
                    </Label>
                    <Label x:Name="label5_Duration"  Grid.Column="3" Foreground="LightGray" MouseDown="label5_Duration_MouseDown">
                        <Label.Background>
                            <ImageBrush ImageSource="Icons/Note/note-black-1_2.png"/>
                        </Label.Background>
                    </Label>
                    <Label x:Name="label6_Duration"  Grid.Column="4" Foreground="LightGray" MouseDown="label6_Duration_MouseDown">
                        <Label.Background>
                            <ImageBrush ImageSource="Icons/Note/note-black-1_1.png"/>
                        </Label.Background>
                    </Label>
                </Grid>
            </Grid>
            <Button x:Name="button_Voice" Foreground="#FFC8C7C8" Visibility="Visible" Content="Realplay" HorizontalAlignment="Left" VerticalAlignment="Top" Width="75" Grid.Column="3" Margin="301.5,10,0,0" Click="button_Click_1" Style="{DynamicResource ButtonStyle1}" Height="50"/>
        </Grid>



        <!-- 
            <TextBox x:Name="textBox" Margin="0" Height=" 200" TextWrapping="Wrap" Text="Chord Info:&#xD;&#xA;&#xD;&#xA;Note Info:&#xD;&#xA;&#xD;&#xA;Bars:&#xD;&#xA;&#xD;&#xA;Others:" Background="#FFCFCFCF" BorderBrush="{x:Null}" VerticalAlignment="Bottom" />
            -->
        <Grid Height="auto" VerticalAlignment="Stretch" Background="#FF1A1A1D"  Grid.Row="2" Grid.RowSpan="1" d:LayoutOverrides="LeftMargin, RightMargin, TopMargin, BottomMargin"  >
            <Grid.RowDefinitions>
                <RowDefinition Height="79*"/>
                <RowDefinition Height="315*"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="17*"/>
                <ColumnDefinition Width="91*"/>
                <ColumnDefinition Width="92*"/>
            </Grid.ColumnDefinitions>


            <Button x:Name="appBarButton" VerticalAlignment="Top" Height="50" Grid.Column ="1" Grid.ColumnSpan="2" Content ="2" HorizontalAlignment="Stretch" Margin ="0,1,0,0"  Width="Auto" Click="appBarButton_Click"  BorderThickness="0" Style="{DynamicResource ButtonStyle1}" Foreground="#FFC8C7C8" FontFamily="Wingdings" FontSize="29.333" FontWeight="Bold"/>
            <StackPanel Grid.Row="0" Grid.RowSpan="2">
                <TextBlock TextWrapping="Wrap" TextAlignment="Center"  Margin="0,1,2,0"  VerticalAlignment="Top" Height="51" Foreground="#FFDBDBDB" RenderTransformOrigin="0.5,0.5" FontSize="10.667" Background="#FF3A3A3A" LineHeight="16"><Run/><LineBreak/><Run Text="Ac"/></TextBlock>
                <ToggleButton x:Name="toggleButton" Margin="0,3,2,0" Height="24.857" VerticalAlignment="Bottom" Click="toggleButton_Click" BorderThickness="0">
                    <ToggleButton.Background>
                        <ImageBrush ImageSource="accompany.png" Stretch="Uniform"/>
                    </ToggleButton.Background>
                </ToggleButton>
                <TextBlock TextWrapping="Wrap" Margin="0,5,2,0"  VerticalAlignment="Top" Height="50" Foreground="#FFDBDBDB" RenderTransformOrigin="0.5,0.5" FontSize="10.667" Background="#FF3A3A3A" TextAlignment="Center" Text="M" LineHeight="16"/>
                <TextBlock Height="150" TextWrapping="Wrap"  Foreground="#FFDBDBDB" Margin="0,2,2,0" FontSize="10.667" Background="#FF3A3A3A" TextAlignment="Center"><Run Text="      "/><Run/><LineBreak/><Run/><LineBreak/><Run Text="C"/></TextBlock>
            </StackPanel>

            <StackPanel Orientation="Vertical" Height="auto" Margin="0,54,0,-0.5" Grid.Column="1" Grid.RowSpan="2">
                <Label Height="25" Content="Timbre" Foreground="#FFC8C7C8" Background="#FF6D6D6D"/>
                <ComboBox x:Name="comboBox_ToneChange0" Height="50"  BorderThickness="0" Margin ="0,1" SelectedIndex="0" Style="{DynamicResource ComboBoxStyle1}" Foreground="#FFC8C7C8" >
                    <ComboBoxItem x:Name="box0_ToneChange1" Content="Piano" Selected="box0_ToneChange1_Checked"   />
                    <ComboBoxItem x:Name="box0_ToneChange2" Content="Organ"  Selected="box0_ToneChange2_Checked"  />
                    <ComboBoxItem x:Name="box0_ToneChange3" Content="Crystal" Selected="box0_ToneChange3_Checked" />
                    <ComboBoxItem x:Name="box0_ToneChange4" Content="Guitar"  Selected="box0_ToneChange4_Checked" />
                    <ComboBoxItem x:Name="box0_ToneChange7" Content="Violin"  Selected="box0_ToneChange7_Checked" />
                    <ComboBoxItem x:Name="box0_ToneChange8" Content="Flute"  Selected="box0_ToneChange8_Checked" />
                    <ComboBoxItem x:Name="box0_ToneChange9" Content="Oboe"  Selected="box0_ToneChange9_Checked" />
                    <ComboBoxItem x:Name="box0_ToneChange10" Content="Suona Horn"  Selected="box0_ToneChange10_Checked" />
                    <ComboBoxItem x:Name="box0_ToneChange5" Content="Random"  Selected="box0_ToneChange5_Checked" />
                    <ComboBoxItem x:Name="box0_ToneChange6" Content="Mute"  Selected="box0_ToneChange6_Checked" />
                </ComboBox>
                <ComboBox x:Name="comboBox_ToneChange1"  SelectedIndex="0" HorizontalAlignment="Stretch" Height="50" Margin="0,1,0,0" VerticalAlignment="Top" Background="#66AAAAAA" BorderThickness="0" Style="{DynamicResource ComboBoxStyle1}" Foreground="#FFC8C7C8" >
                    <ComboBoxItem x:Name="box1_ToneChange1" Content="Piano" Selected="box1_ToneChange1_Checked"   />
                    <ComboBoxItem x:Name="box1_ToneChange2" Content="Organ" Selected="box1_ToneChange2_Checked"  />
                    <ComboBoxItem x:Name="box1_ToneChange3" Content="Crystal" Selected="box1_ToneChange3_Checked" />
                    <ComboBoxItem x:Name="box1_ToneChange4" Content="Guitar"  Selected="box1_ToneChange4_Checked" />
                    <ComboBoxItem x:Name="box1_ToneChange6" Content="Violin"  Selected="box1_ToneChange6_Checked" />
                    <ComboBoxItem x:Name="box1_ToneChange7" Content="Flute"  Selected="box1_ToneChange7_Checked" />
                    <ComboBoxItem x:Name="box1_ToneChange8" Content="Oboe"  Selected="box1_ToneChange8_Checked" />
                    <ComboBoxItem x:Name="box1_ToneChange9" Content="Suona Horn"  Selected="box1_ToneChange9_Checked" />
                    <ComboBoxItem x:Name="box1_ToneChange5" Content="Random"  Selected="box1_ToneChange5_Checked" />
                </ComboBox>
                <ComboBox x:Name="comboBox_ToneChange2"  SelectedIndex="0" HorizontalAlignment="Stretch" Height="50" Margin="0,1,0,0" VerticalAlignment="Top" Background="#66AAAAAA" BorderThickness="0" Style="{DynamicResource ComboBoxStyle1}" Foreground="#FFC8C7C8" >
                    <ComboBoxItem x:Name="box2_ToneChange1" Content="Piano" Selected="box2_ToneChange1_Checked"   />
                    <ComboBoxItem x:Name="box2_ToneChange2" Content="Organ"  Selected="box2_ToneChange2_Checked"  />
                    <ComboBoxItem x:Name="box2_ToneChange3" Content="Crystal" Selected="box2_ToneChange3_Checked" />
                    <ComboBoxItem x:Name="box2_ToneChange4" Content="Guitar"  Selected="box2_ToneChange4_Checked" />
                    <ComboBoxItem x:Name="box2_ToneChange6" Content="Violin"  Selected="box2_ToneChange6_Checked" />
                    <ComboBoxItem x:Name="box2_ToneChange7" Content="Flute"  Selected="box2_ToneChange7_Checked" />
                    <ComboBoxItem x:Name="box2_ToneChange8" Content="Oboe"  Selected="box2_ToneChange8_Checked" />
                    <ComboBoxItem x:Name="box2_ToneChange9" Content="Suona Horn"  Selected="box2_ToneChange9_Checked" />
                    <ComboBoxItem x:Name="box2_ToneChange5" Content="Random"  Selected="box2_ToneChange5_Checked" />
                </ComboBox>
                <ComboBox x:Name="comboBox_ToneChange3"   SelectedIndex="0" HorizontalAlignment="Stretch" Height="50" Margin="0,1,0,0" VerticalAlignment="Top" Background="#66AAAAAA" BorderThickness="0" Style="{DynamicResource ComboBoxStyle1}" Foreground="#FFC8C7C8">
                    <ComboBoxItem x:Name="box3_ToneChange1" Content="Piano" Selected="box3_ToneChange1_Checked"   />
                    <ComboBoxItem x:Name="box3_ToneChange2" Content="Organ"  Selected="box3_ToneChange1_Checked"  />
                    <ComboBoxItem x:Name="box3_ToneChange3" Content="Crystal" Selected="box3_ToneChange1_Checked" />
                    <ComboBoxItem x:Name="box3_ToneChange4" Content="Guitar"  Selected="box3_ToneChange1_Checked" />
                    <ComboBoxItem x:Name="box3_ToneChange6" Content="Violin"  Selected="box3_ToneChange6_Checked" />
                    <ComboBoxItem x:Name="box3_ToneChange7" Content="Flute"  Selected="box3_ToneChange7_Checked" />
                    <ComboBoxItem x:Name="box3_ToneChange8" Content="Oboe"  Selected="box3_ToneChange8_Checked" />
                    <ComboBoxItem x:Name="box3_ToneChange9" Content="Suona Horn"  Selected="box3_ToneChange9_Checked" />
                    <ComboBoxItem x:Name="box3_ToneChange5" Content="Random"  Selected="box3_ToneChange1_Checked" />
                </ComboBox>
            </StackPanel>

            <StackPanel Orientation="Vertical" Height="auto" Grid.Column="2" Margin="2,54,2,-0.5" Grid.RowSpan="2">
                <Label Height="25" Content="Chord" Foreground="#FFC8C7C8" Background="#FF6D6D6D"/>
                <ComboBox x:Name="combobox_Duration"  Height="50"  BorderThickness="0" Margin ="0,1" SelectedIndex="2" Style="{DynamicResource ComboBoxStyle1}" Foreground="#FFC8C7C8" >
                    <ComboBoxItem x:Name="radioButton_Note0" Content="1/16" Selected="radioButton_Note0_Checked"  />
                    <ComboBoxItem x:Name="radioButton_Note1" Content="1/8"  Selected="radioButton_Note1_Checked"  />
                    <ComboBoxItem x:Name="radioButton_Note2" Content="1/4" Selected="radioButton_Note2_Checked" />
                    <ComboBoxItem x:Name="radioButton_Note3" Content="1/2"  Selected="radioButton_Note3_Checked" />
                    <ComboBoxItem x:Name="radioButton_Note4" Content="1/1"  Selected="radioButton_Note4_Checked" />
                </ComboBox>


                <ComboBox x:Name="comboBox_piano"  SelectedIndex="0" HorizontalAlignment="Stretch" Height="50" Margin="0,1,0,0" VerticalAlignment="Top" Background="#66AAAAAA" BorderThickness="0" Style="{DynamicResource ComboBoxStyle1}" Foreground="#FFC8C7C8" >
                    <ComboBoxItem x:Name="box1_Chord1" Content="Normal" Selected="box1_Chord1_Selected"  />
                    <ComboBoxItem x:Name="box1_Chord2" Content="Active" Selected="box1_Chord2_Selected" />
                    <ComboBoxItem x:Name="box1_Chord3" Content="Deep"  Selected="box1_Chord3_Selected"/>
                    <ComboBoxItem x:Name="box1_Chord5" Content="beautiful" Selected="box1_Chord5_Selected"/>
                    <ComboBoxItem x:Name="box1_Chord6" Content="Naughty" Selected="box1_Chord6_Selected"/>
                    <ComboBoxItem x:Name="box1_Chord4" Content="Mute" Selected="box1_Chord4_Selected"/>
                </ComboBox>
                <ComboBox x:Name="comboBox_piano2"  SelectedIndex="2" HorizontalAlignment="Stretch" Height="50" Margin="0,1,0,0" VerticalAlignment="Top" Background="#66AAAAAA" BorderThickness="0" Style="{DynamicResource ComboBoxStyle1}" Foreground="#FFC8C7C8" >
                    <ComboBoxItem x:Name="box2_Chord1" Content="Normal" Selected="box2_Chord1_Selected"  />
                    <ComboBoxItem x:Name="box2_Chord2" Content="Active" Selected="box2_Chord2_Selected" />
                    <ComboBoxItem x:Name="box2_Chord3" Content="Deep"  Selected="box2_Chord3_Selected"/>
                    <ComboBoxItem x:Name="box2_Chord5" Content="beautiful" Selected="box2_Chord5_Selected"/>
                    <ComboBoxItem x:Name="box2_Chord6" Content="Naughty" Selected="box2_Chord6_Selected"/>
                    <ComboBoxItem x:Name="box2_Chord4" Content="Mute" Selected="box2_Chord4_Selected"/>
                </ComboBox>
                <ComboBox x:Name="comboBox_String"   SelectedIndex="5" HorizontalAlignment="Stretch" Height="50" Margin="0,1,0,0" VerticalAlignment="Top" Background="#66AAAAAA" BorderThickness="0" Style="{DynamicResource ComboBoxStyle1}" Foreground="#FFC8C7C8">
                    <ComboBoxItem x:Name="box3_Chord1" Content="Normal" Selected="box3_Chord1_Selected"  />
                    <ComboBoxItem x:Name="box3_Chord2" Content="Active" Selected="box3_Chord2_Selected" />
                    <ComboBoxItem x:Name="box3_Chord3" Content="Deep" Selected="box3_Chord3_Selected"/>
                    <ComboBoxItem x:Name="box3_Chord5" Content="beautiful" Selected="box3_Chord5_Selected"/>
                    <ComboBoxItem x:Name="box3_Chord6" Content="Naughty" Selected="box3_Chord6_Selected"/>

                    <ComboBoxItem x:Name="box3_Chord4" Content="Mute" Selected="box3_Chord4_Selected"/>
                </ComboBox>
            </StackPanel>
        </Grid>

        <Grid x:Name="mainDisplay" Background="#FFD4D4D4" Grid.Column="1" Grid.Row="2" Margin="9,9,9,9.5" d:LayoutOverrides="LeftMargin, RightMargin, TopMargin, BottomMargin" >
            <Grid.RowDefinitions>
                <RowDefinition Height="123.333"/>
                <RowDefinition Height="19*"/>
                <RowDefinition Height="36*"/>
            </Grid.RowDefinitions>
            <ScrollViewer x:Name="mainsv" Margin="5" VerticalAlignment="Stretch" Visibility="Visible" Foreground="Black" Grid.RowSpan="3">

                <ScrollViewer.BorderBrush>
                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                        <GradientStop Color="Black" Offset="0"/>
                        <GradientStop Color="White" Offset="1"/>
                    </LinearGradientBrush>
                </ScrollViewer.BorderBrush>
                <StackPanel x:Name="mainsp"/>
            </ScrollViewer>
            <Border BorderThickness="5" Margin="-5" CornerRadius="10" Grid.RowSpan="3">
                <Border.BorderBrush>
                    <LinearGradientBrush EndPoint="0.5,1" MappingMode="RelativeToBoundingBox" StartPoint="0.5,0">
                        <GradientStop Color="Black" Offset="1"/>
                        <GradientStop Color="White" Offset="0.051"/>
                    </LinearGradientBrush>
                </Border.BorderBrush>
            </Border>

            <TextBox x:Name="textBlock_main" Visibility="Hidden" HorizontalAlignment="Stretch" TextWrapping='Wrap' VerticalAlignment="Stretch" Margin="10,3,10,9.5" BorderBrush="{x:Null}" Background="{x:Null}" Foreground="Black" Grid.RowSpan="1" FontSize="21.333" />
            <TextBox x:Name="textBlock_main2" Visibility="Hidden" Grid.Row="1"  HorizontalAlignment="Stretch" TextWrapping="Wrap" VerticalAlignment="Stretch" Margin="10,11.667,9.667,82.286" BorderBrush="{x:Null}" Background="{x:Null}" Foreground="Black" FontSize="29.333" Grid.RowSpan="2"/>

            <Grid x:Name="realPlay_Grid" HorizontalAlignment="Stretch"  VerticalAlignment="Stretch" Margin="25,25,40,25" Grid.RowSpan="3" Visibility="Hidden">

                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="2*"/>
                    <ColumnDefinition Width="1*"/>
                    <ColumnDefinition Width="1*"/>
                    <ColumnDefinition Width="1*"/>
                    <ColumnDefinition Width="1*"/>
                    <ColumnDefinition Width="1*"/>
                    <ColumnDefinition Width="1*"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="1*"/>
                    <RowDefinition Height="2*"/>
                    <RowDefinition Height="2*"/>
                    <RowDefinition Height="2*"/>
                    <RowDefinition Height="2*"/>
                    <RowDefinition Height="2*"/>
                </Grid.RowDefinitions>

                <Border Margin="-2" BorderThickness="2" Grid.ColumnSpan="9" Grid.RowSpan="9">
                    <Border.BorderBrush>
                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                            <GradientStop Color="#FFBFBFBF" Offset="0"/>
                            <GradientStop Color="#FF949494" Offset="1"/>
                        </LinearGradientBrush>
                    </Border.BorderBrush>
                </Border>

                <Button Grid.Row="0" Grid.Column="0" Content="Play"  BorderThickness="0" FontFamily="MV Boli" Background="#FFECEBEB" />
                <ComboBox  Grid.Row="1" Grid.Column="0" Height="70"  BorderThickness="0"  SelectedIndex="0" >
                    <ComboBoxItem x:Name="box00_ToneChange1" Content="Piano" Selected="box0_ToneChange1_Checked"   />
                    <ComboBoxItem x:Name="box00_ToneChange2" Content="Organ"  Selected="box0_ToneChange2_Checked"  />
                    <ComboBoxItem x:Name="box00_ToneChange3" Content="Crystal" Selected="box0_ToneChange3_Checked" />
                    <ComboBoxItem x:Name="box00_ToneChange4" Content="Guitar"  Selected="box0_ToneChange4_Checked" />
                    <ComboBoxItem x:Name="box00_ToneChange7" Content="Violin"  Selected="box0_ToneChange7_Checked" />
                    <ComboBoxItem x:Name="box00_ToneChange8" Content="Flute"  Selected="box0_ToneChange8_Checked" />
                    <ComboBoxItem x:Name="box00_ToneChange9" Content="Oboe"  Selected="box0_ToneChange9_Checked" />
                    <ComboBoxItem x:Name="box00_ToneChange10" Content="Suona Horn"  Selected="box0_ToneChange10_Checked" />
                    <ComboBoxItem x:Name="box00_ToneChange5" Content="Random"  Selected="box0_ToneChange5_Checked" />
                    <ComboBoxItem x:Name="box00_ToneChange6" Content="Mute"  Selected="box0_ToneChange6_Checked" />
                </ComboBox>
                <ComboBox x:Name="comboBox_ToneChange11"  Grid.Row="2" Grid.Column="0"  SelectedIndex="0" HorizontalAlignment="Stretch" Height="70" Margin="0,1,0.333,0" VerticalAlignment="Top" Background="#66AAAAAA" BorderThickness="0"  >
                    <ComboBoxItem x:Name="box11_ToneChange1" Content="Piano" Selected="box1_ToneChange1_Checked"   />
                    <ComboBoxItem x:Name="box11_ToneChange2" Content="Organ" Selected="box1_ToneChange2_Checked"  />
                    <ComboBoxItem x:Name="box11_ToneChange3" Content="Crystal" Selected="box1_ToneChange3_Checked" />
                    <ComboBoxItem x:Name="box11_ToneChange4" Content="Guitar"  Selected="box1_ToneChange4_Checked" />
                    <ComboBoxItem x:Name="box11_ToneChange6" Content="Violin"  Selected="box1_ToneChange6_Checked" />
                    <ComboBoxItem x:Name="box11_ToneChange7" Content="Flute"  Selected="box1_ToneChange7_Checked" />
                    <ComboBoxItem x:Name="box11_ToneChange8" Content="Oboe"  Selected="box1_ToneChange8_Checked" />
                    <ComboBoxItem x:Name="box11_ToneChange9" Content="Suona Horn"  Selected="box1_ToneChange9_Checked" />
                    <ComboBoxItem x:Name="box11_ToneChange5" Content="Random"  Selected="box1_ToneChange5_Checked" />
                </ComboBox>
                <ComboBox x:Name="comboBox_ToneChange22"  Grid.Row="3" Grid.Column="0"  SelectedIndex="0" HorizontalAlignment="Stretch" Height="70" Margin="0,1,0.333,0" VerticalAlignment="Top"  BorderThickness="0" >
                    <ComboBoxItem x:Name="box22_ToneChange1" Content="Piano" Selected="box2_ToneChange1_Checked"   />
                    <ComboBoxItem x:Name="box22_ToneChange2" Content="Organ"  Selected="box2_ToneChange2_Checked"  />
                    <ComboBoxItem x:Name="box22_ToneChange3" Content="Crystal" Selected="box2_ToneChange3_Checked" />
                    <ComboBoxItem x:Name="box22_ToneChange4" Content="Guitar"  Selected="box2_ToneChange4_Checked" />
                    <ComboBoxItem x:Name="box22_ToneChange6" Content="Violin"  Selected="box2_ToneChange6_Checked" />
                    <ComboBoxItem x:Name="box22_ToneChange7" Content="Flute"  Selected="box2_ToneChange7_Checked" />
                    <ComboBoxItem x:Name="box22_ToneChange8" Content="Oboe"  Selected="box2_ToneChange8_Checked" />
                    <ComboBoxItem x:Name="box22_ToneChange9" Content="Suona Horn"  Selected="box2_ToneChange9_Checked" />
                    <ComboBoxItem x:Name="box22_ToneChange5" Content="Random"  Selected="box2_ToneChange5_Checked" />
                </ComboBox>
                <ComboBox x:Name="comboBox_ToneChange33"  Grid.Row="4" Grid.Column="0"   SelectedIndex="0" HorizontalAlignment="Stretch" Height="70" Margin="0,1,0.333,0" VerticalAlignment="Top" Background="#66AAAAAA" BorderThickness="0">
                    <ComboBoxItem x:Name="box33_ToneChange1" Content="Piano" Selected="box3_ToneChange1_Checked"   />
                    <ComboBoxItem x:Name="box33_ToneChange2" Content="Organ"  Selected="box3_ToneChange1_Checked"  />
                    <ComboBoxItem x:Name="box33_ToneChange3" Content="Crystal" Selected="box3_ToneChange1_Checked" />
                    <ComboBoxItem x:Name="box33_ToneChange4" Content="Guitar"  Selected="box3_ToneChange1_Checked" />
                    <ComboBoxItem x:Name="box33_ToneChange6" Content="Violin"  Selected="box3_ToneChange6_Checked" />
                    <ComboBoxItem x:Name="box33_ToneChange7" Content="Flute"  Selected="box3_ToneChange7_Checked" />
                    <ComboBoxItem x:Name="box33_ToneChange8" Content="Oboe"  Selected="box3_ToneChange8_Checked" />
                    <ComboBoxItem x:Name="box33_ToneChange9" Content="Suona Horn"  Selected="box3_ToneChange9_Checked" />
                    <ComboBoxItem x:Name="box33_ToneChange5" Content="Random"  Selected="box3_ToneChange1_Checked" />
                </ComboBox>
                <Button  Grid.Row="6" Grid.Column="0"  Content="!"  Height="50" Click="Button_Click" BorderThickness="0" FontFamily="Wingdings" FontSize="24"></Button>

            </Grid>
        </Grid>


        <Grid Width="auto" HorizontalAlignment="Stretch" Background="#FF1A1A1D" Grid.Row="3" Grid.Column="1" d:LayoutOverrides="LeftMargin, RightMargin, TopMargin, BottomMargin" >
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="201*"/>
                <ColumnDefinition Width="0*"/>
                <ColumnDefinition Width="0*"/>
                <ColumnDefinition Width="315*"/>
                <ColumnDefinition Width="664*"/>
                <ColumnDefinition Width="89*"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <Grid x:Name="mainKeyBoard" Grid.RowSpan="4" Grid.Column="0" HorizontalAlignment="Stretch" Grid.ColumnSpan="5" Margin="6,0,0,0" >
                <Grid.RowDefinitions>
                    <RowDefinition Height="127*"/>
                    <RowDefinition Height="73*"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="1*"/>
                    <ColumnDefinition Width="1*"/>
                    <ColumnDefinition Width="1*"/>
                    <ColumnDefinition Width="1*"/>
                    <ColumnDefinition Width="1*"/>
                    <ColumnDefinition Width="1*"/>
                    <ColumnDefinition Width="1*"/>
                    <ColumnDefinition Width="1*"/>
                    <ColumnDefinition Width="1*"/>
                    <ColumnDefinition Width="1*"/>
                    <ColumnDefinition Width="1*"/>
                    <ColumnDefinition Width="1*"/>
                    <ColumnDefinition Width="1*"/>
                    <ColumnDefinition Width="1*"/>
                    <ColumnDefinition Width="1*"/>
                    <ColumnDefinition Width="1*"/>
                    <ColumnDefinition Width="1*"/>
                    <ColumnDefinition Width="1*"/>
                    <ColumnDefinition Width="1*"/>
                    <ColumnDefinition Width="1*"/>
                    <ColumnDefinition Width="1*"/>
                    <ColumnDefinition Width="1*"/>
                </Grid.ColumnDefinitions>
                <Button x:Name="white_piano0" Margin="3,0,0,0"  Content="&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;C4"  Background="White" BorderBrush="LightGray" BorderThickness="1,1,1,1" Click="button_piano0_Click"  Grid.RowSpan="2" MouseUp="white_piano0_MouseUp" MouseDown="white_piano0_MouseDown" Style="{DynamicResource ButtonStyle_WhitePiano}"  />
                <Button x:Name="white_piano1" HorizontalAlignment="Stretch" Content="&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;" VerticalAlignment="Stretch" Grid.Column="1" Grid.ColumnSpan="1" Grid.RowSpan="2" Width="auto" Background="White" BorderBrush="LightGray" BorderThickness="1,1,0,1" Click="button_piano1_Click" Style="{DynamicResource ButtonStyle_WhitePiano}"  />
                <Button x:Name="white_piano2" HorizontalAlignment="Stretch" Content="&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;" VerticalAlignment="Stretch" Grid.Column="2"  Width="auto" Background="White" BorderBrush="LightGray" BorderThickness="1,1,0,1" Click="button_piano2_Click" Grid.RowSpan="2" Style="{DynamicResource ButtonStyle_WhitePiano}"  />
                <Button x:Name="white_piano3" HorizontalAlignment="Stretch" Content="&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;" VerticalAlignment="Stretch" Grid.Column="3" Grid.ColumnSpan="1" Grid.RowSpan="2" Width="auto" Background="White" BorderBrush="LightGray" BorderThickness="1,1,0,1" Click="button_piano3_Click" Style="{DynamicResource ButtonStyle_WhitePiano}"  />
                <Button x:Name="white_piano4" HorizontalAlignment="Stretch" Content="&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;" VerticalAlignment="Stretch" Grid.Column="4" Grid.ColumnSpan="1" Grid.RowSpan="2" Width="auto" Background="White" BorderBrush="LightGray" BorderThickness="1,1,0,1" Click="button_piano4_Click" Style="{DynamicResource ButtonStyle_WhitePiano}"  />
                <Button x:Name="white_piano5" HorizontalAlignment="Stretch" Content="&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;" VerticalAlignment="Stretch" Grid.Column="5" Grid.ColumnSpan="1" Grid.RowSpan="2" Width="auto" Background="White" BorderBrush="LightGray" BorderThickness="1,1,0,1" Click="button_piano5_Click" Style="{DynamicResource ButtonStyle_WhitePiano}"  />
                <Button x:Name="white_piano6" HorizontalAlignment="Stretch" Content="&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;" VerticalAlignment="Stretch" Grid.Column="6" Grid.ColumnSpan="1" Grid.RowSpan="2" Width="auto" Background="White" BorderBrush="LightGray" BorderThickness="1,1,0,1" Click="button_piano6_Click" Style="{DynamicResource ButtonStyle_WhitePiano}"  />
                <Button x:Name="white_piano7" HorizontalAlignment="Stretch" Content="&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;C5" VerticalAlignment="Stretch" Grid.Column="7" Grid.ColumnSpan="1" Grid.RowSpan="2" Width="auto" Background="White" BorderBrush="LightGray" BorderThickness="1,1,0,1" Click="button_piano7_Click" Style="{DynamicResource ButtonStyle_WhitePiano}"  />
                <Button x:Name="white_piano8" HorizontalAlignment="Stretch" Content="&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;" VerticalAlignment="Stretch" Grid.Column="8" Grid.ColumnSpan="1" Grid.RowSpan="2" Width="auto" Background="White" BorderBrush="LightGray" BorderThickness="1,1,0,1" Click="button_piano8_Click" Style="{DynamicResource ButtonStyle_WhitePiano}"  />
                <Button x:Name="white_piano9" HorizontalAlignment="Stretch" Content="&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;" VerticalAlignment="Stretch" Grid.Column="9" Grid.ColumnSpan="1" Grid.RowSpan="2" Width="auto" Background="White" BorderBrush="LightGray" BorderThickness="1,1,0,1" Click="button_piano9_Click" Style="{DynamicResource ButtonStyle_WhitePiano}"  />
                <Button x:Name="white_piano10" HorizontalAlignment="Stretch" Content="&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;" VerticalAlignment="Stretch" Grid.Column="10" Grid.ColumnSpan="1" Grid.RowSpan="2" Width="auto" Background="White" BorderBrush="LightGray" BorderThickness="1,1,0,1" Click="button_piano10_Click" Style="{DynamicResource ButtonStyle_WhitePiano}"  />
                <Button x:Name="white_piano11" HorizontalAlignment="Stretch" Content="&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;" VerticalAlignment="Stretch" Grid.Column="11" Grid.ColumnSpan="1" Grid.RowSpan="2" Width="auto" Background="White" BorderBrush="LightGray" BorderThickness="1,1,0,1" Click="button_piano11_Click" Style="{DynamicResource ButtonStyle_WhitePiano}"  />
                <Button x:Name="white_piano12" HorizontalAlignment="Stretch" Content="&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;" VerticalAlignment="Stretch" Grid.Column="12" Grid.ColumnSpan="1" Grid.RowSpan="2" Width="auto" Background="White" BorderBrush="LightGray" BorderThickness="1,1,0,1" Click="button_piano12_Click" Style="{DynamicResource ButtonStyle_WhitePiano}"  />
                <Button x:Name="white_piano13" HorizontalAlignment="Stretch"  Content="&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;" VerticalAlignment="Stretch" Grid.Column="13" Grid.ColumnSpan="1" Grid.RowSpan="2" Width="auto" Background="White" BorderBrush="LightGray" BorderThickness="1,1,0,1" Click="button_piano13_Click" Style="{DynamicResource ButtonStyle_WhitePiano}"  />
                <Button x:Name="white_piano14" HorizontalAlignment="Stretch" Content="&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;C6"  VerticalAlignment="Stretch" Grid.Column="14" Grid.ColumnSpan="1" Grid.RowSpan="2" Width="auto" Background="White" BorderBrush="LightGray" BorderThickness="1,1,0,1" Click="button_piano14_Click" Style="{DynamicResource ButtonStyle_WhitePiano}"  />
                <Button x:Name="white_piano15" HorizontalAlignment="Stretch" Content="&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;" VerticalAlignment="Stretch" Grid.Column="15" Grid.ColumnSpan="1" Grid.RowSpan="2" Width="auto" Background="White" BorderBrush="LightGray" BorderThickness="1,1,0,1" Click="button_piano15_Click" Style="{DynamicResource ButtonStyle_WhitePiano}"  />
                <Button x:Name="white_piano16" HorizontalAlignment="Stretch" Content="&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;" VerticalAlignment="Stretch" Grid.Column="16" Grid.ColumnSpan="1" Grid.RowSpan="2" Width="auto" Background="White" BorderBrush="LightGray" BorderThickness="1,1,0,1" Click="button_piano16_Click" Style="{DynamicResource ButtonStyle_WhitePiano}"  />
                <Button x:Name="white_piano17" HorizontalAlignment="Stretch" Content="&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;" VerticalAlignment="Stretch" Grid.Column="17" Grid.ColumnSpan="1" Grid.RowSpan="2" Width="auto" Background="White" BorderBrush="LightGray" BorderThickness="1,1,0,1" Click="button_piano17_Click" Style="{DynamicResource ButtonStyle_WhitePiano}"  />
                <Button x:Name="white_piano18" HorizontalAlignment="Stretch" Content="&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;" VerticalAlignment="Stretch" Grid.Column="18" Grid.ColumnSpan="1" Grid.RowSpan="2" Width="auto" Background="White" BorderBrush="LightGray" BorderThickness="1,1,0,1" Click="button_piano18_Click" Style="{DynamicResource ButtonStyle_WhitePiano}"  />
                <Button x:Name="white_piano19" HorizontalAlignment="Stretch" Content="&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;" VerticalAlignment="Stretch" Grid.Column="19" Grid.ColumnSpan="1" Grid.RowSpan="2" Width="auto" Background="White" BorderBrush="LightGray" BorderThickness="1,1,0,1" Click="button_piano19_Click" Style="{DynamicResource ButtonStyle_WhitePiano}"  />
                <Button x:Name="white_piano20" HorizontalAlignment="Stretch" Content="&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;" VerticalAlignment="Stretch" Grid.Column="20" Grid.ColumnSpan="1" Grid.RowSpan="2" Width="auto" Background="White" BorderBrush="LightGray" BorderThickness="1,1,0,1" Click="button_piano20_Click" Style="{DynamicResource ButtonStyle_WhitePiano}"  />
                <Button x:Name="white_piano21" HorizontalAlignment="Stretch" Content="&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;C7" VerticalAlignment="Stretch" Grid.Column="21" Grid.ColumnSpan="1" Grid.RowSpan="2" Width="auto" Background="White" BorderBrush="LightGray" BorderThickness="1" Click="button_piano21_Click" Style="{DynamicResource ButtonStyle_WhitePiano}"  />

                <Button x:Name="black_piano0"  Grid.Column="1"  Width="36" Background="Black" BorderBrush="Black" Margin="-13,0,24,0" Style="{DynamicResource ButtonStyle_BlackPiano}" Click="black_piano0_Click" />
                <Button x:Name="black_piano1"  Grid.Column="2"  Width="36" Background="Black" BorderBrush="Black" Margin="-13,0,24,0" Style="{DynamicResource ButtonStyle_BlackPiano}" />
                <Button x:Name="black_piano2"  Grid.Column="4"  Width="36" Background="Black" BorderBrush="Black" Margin="-13,0,24,0" Style="{DynamicResource ButtonStyle_BlackPiano}" />
                <Button x:Name="black_piano3"  Grid.Column="5"  Width="36" Background="Black" BorderBrush="Black" Margin="-13,0,24,0" Style="{DynamicResource ButtonStyle_BlackPiano}" />
                <Button x:Name="black_piano4"  Grid.Column="6"  Width="36" Background="Black" BorderBrush="Black" Margin="-13,0,24,0" Style="{DynamicResource ButtonStyle_BlackPiano}" />
                <Button x:Name="black_piano5"  Grid.Column="8"  Width="36" Background="Black" BorderBrush="Black" Margin="-13,0,24,0" Style="{DynamicResource ButtonStyle_BlackPiano}" />
                <Button x:Name="black_piano6"  Grid.Column="9"  Width="36" Background="Black" BorderBrush="Black" Margin="-13,0,24,0" Style="{DynamicResource ButtonStyle_BlackPiano}" />
                <Button x:Name="black_piano7"  Grid.Column="11"  Width="36" Background="Black" BorderBrush="Black" Margin="-13,0,24,0" Style="{DynamicResource ButtonStyle_BlackPiano}" />
                <Button x:Name="black_piano8"  Grid.Column="12"  Width="36" Background="Black" BorderBrush="Black" Margin="-13,0,24,0" Style="{DynamicResource ButtonStyle_BlackPiano}" />
                <Button x:Name="black_piano9"  Grid.Column="13"  Width="36" Background="Black" BorderBrush="Black" Margin="-13,0,24,0" Style="{DynamicResource ButtonStyle_BlackPiano}" />
                <Button x:Name="black_piano10"  Grid.Column="15"  Width="36" Background="Black" BorderBrush="Black" Margin="-13,0,24,0" Style="{DynamicResource ButtonStyle_BlackPiano}" />
                <Button x:Name="black_piano11"  Grid.Column="16"  Width="36" Background="Black" BorderBrush="Black" Margin="-13,0,24,0" Style="{DynamicResource ButtonStyle_BlackPiano}" />
                <Button x:Name="black_piano12"  Grid.Column="18"  Width="36" Background="Black" BorderBrush="Black" Margin="-13,0,24,0" Style="{DynamicResource ButtonStyle_BlackPiano}" />
                <Button x:Name="black_piano13"  Grid.Column="19"  Width="36" Background="Black" BorderBrush="Black" Margin="-13,0,24,0" Style="{DynamicResource ButtonStyle_BlackPiano}" />
                <Button x:Name="black_piano14"  Grid.Column="20"  Width="36" Background="Black" BorderBrush="Black" Margin="-13,0,24,0" Style="{DynamicResource ButtonStyle_BlackPiano}" />
            </Grid>
            <Grid Grid.Column="5" Grid.RowSpan="4" Margin="3,5,2,2" d:LayoutOverrides="LeftMargin, RightMargin, TopMargin, BottomMargin">
                <Grid.RowDefinitions>
                    <RowDefinition Height="1*"/>
                    <RowDefinition Height="1*"/>
                    <RowDefinition Height="1*"/>
                </Grid.RowDefinitions>
                <Button x:Name="appBarButton_chordCreate2" Grid.Row="0"  Content ="MM" Click="appBarButton_Smart_Click" Style="{DynamicResource ButtonStyle1}" Foreground="#FFC8C7C8" BorderThickness="0" Margin="0,-5,0,5" d:LayoutOverrides="Width" />

                <Button x:Name="appBarButton_delete"  Content="x"  Click="appBarButton_Delete_Click"  BorderThickness="0"   Style="{DynamicResource ButtonStyle1}" Foreground="#FFC8C7C8" FontFamily="Wingdings" FontSize="26.667" Margin="0,71,0.333,0" Grid.RowSpan="2" />
                <Button x:Name="button_Rest" Content ="n" Grid.Row="2"  BorderThickness="0" Style="{DynamicResource ButtonStyle1}" Foreground="#FFC8C7C8" Click="Button_Rest_Click" d:LayoutOverrides="Width" FontFamily="Wingdings" FontSize="26.667" />

            </Grid>
        </Grid>
        <Canvas x:Name="canvas_UserGuidance" Visibility="Hidden" Grid.ColumnSpan="2" Margin="0,0,0,-0.5" Grid.RowSpan="4" MouseDown="Canvas_MouseDown" d:LayoutOverrides="LeftMargin, RightMargin, TopMargin, BottomMargin" d:IsHidden="True">
            <Path Data="M170.75,144.55336 C170.75,144.55336 222.74974,-46.4463 291.74974,-106.4463" Stretch="Fill" Stroke="#FF397FF9" StrokeThickness="5" Width="302" Height="252" Canvas.Left="139.517" Canvas.Top="378.72"/>
            <Path Data="M170.75,144.55336 C170.75,144.55336 222.74974,-46.4463 291.74974,-106.4463" Stretch="Fill" Stroke="#FF397FF9" StrokeThickness="5" Height="196.5" Width="119.5" Canvas.Left="139.517" Canvas.Top="286"/>
            <Rectangle Height="316.803" Stroke="#FF397FF9" Width="203.474" StrokeThickness="5"/>
            <Label x:Name="label" Content="1.键盘输入" Height="82.24" Width="199.457" Canvas.Left="982.017" Canvas.Top="261.26" Foreground="#FF397FF9" FontSize="32"/>
            <Path Data="M611,323 C674,284 727.5,226.5 727.5,226.5" Height="88" Canvas.Left="203.474" Stretch="Fill" Stroke="#FF397FF9" StrokeThickness="5" Canvas.Top="71.26" Width="108.5" RenderTransformOrigin="0.5,0.5">
                <Path.RenderTransform>
                    <TransformGroup>
                        <ScaleTransform ScaleY="-1"/>
                        <SkewTransform/>
                        <RotateTransform/>
                        <TranslateTransform/>
                    </TransformGroup>
                </Path.RenderTransform>
            </Path>
            <Label x:Name="label_Copy" Content="2.调整和弦，音色" Height="76.24" Width="357.457" Canvas.Left="264.017" Canvas.Top="159.26" Foreground="#FF397FF9" FontSize="32"/>
            <Path Data="M611,323 C674,284 727.5,226.5 727.5,226.5" Height="158.5" Canvas.Left="907.5" Stretch="Fill" Stroke="#FF397FF9" StrokeThickness="5" Canvas.Top="319.5" Width="116.5"/>
            <Label x:Name="label_Copy1" Content="4.播放" Height="76.24" Width="357.457" Canvas.Left="264.017" Canvas.Top="261.26" Foreground="#FF397FF9" FontSize="32"/>
            <Label x:Name="label_Copy2" Content="3.获取和弦" Height="76.24" Width="357.457" Canvas.Left="484.017" Canvas.Top="337.5" Foreground="#FF397FF9" FontSize="32"/>
            <Rectangle Height="56.636" Stroke="#FFF93939" Width="191.5" StrokeThickness="2" Canvas.Top="482.5"/>
            <Rectangle Height="202.938" Stroke="#FF397FF9" Width="981.724" StrokeThickness="5" Canvas.Left="196.5" Canvas.Top="478.5"/>
            <Rectangle Height="51.718" Stroke="#FFF93939" Width="198" StrokeThickness="2" Canvas.Top="629.72"/>
            <Label x:Name="label_Copy3" Content="I Know~" Height="76.24" Width="357.457" Canvas.Left="820.767" Canvas.Top="88" Foreground="#FFF93939" FontSize="64" Background="{x:Null}" FontFamily="Arial Black" RenderTransformOrigin="0.5,0.5">
                <Label.RenderTransform>
                    <TransformGroup>
                        <ScaleTransform/>
                        <SkewTransform/>
                        <RotateTransform Angle="-22.064"/>
                        <TranslateTransform/>
                    </TransformGroup>
                </Label.RenderTransform>
            </Label>
        </Canvas>
        <Menu x:Name="menu" Grid.ColumnSpan="2" Visibility="Hidden" Background="White" Foreground="Black" d:LayoutOverrides="LeftMargin, RightMargin, TopMargin, BottomMargin" d:IsHidden="True" >
            <MenuItem Margin="5,0,0,0" Header="文件" Height="auto" Width="50">
                <MenuItem Header="新建"/>
                <MenuItem Header="导出"/>
                <MenuItem Header="导入"/>
                <MenuItem Header="储存"/>
                <MenuItem Header="信息"/>
                <MenuItem Header="设计"/>
                <MenuItem Header="模板"/>
            </MenuItem>
            <MenuItem Header="编辑" Width="50" />
            <MenuItem Header="和弦" Width="50"/>
            <MenuItem Header="帮助" Width="50"/>

        </Menu>
        <Grid Grid.Row="3" Margin="0,8.5,0,0.5" d:LayoutOverrides="LeftMargin, RightMargin, TopMargin, BottomMargin" >
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="1*"/>
                <ColumnDefinition Width="1*"/>
                <ColumnDefinition Width="1*"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="29*"/>
                <RowDefinition Height="139*"/>
                <RowDefinition Height="33*"/>
            </Grid.RowDefinitions>
            <Label x:Name="label1"  Content="Music Lib" Foreground="#FFC8C7C8" Grid.ColumnSpan="3" Background="#FF6D6D6D" Margin="0,0,4,3"/>
            <ListView x:Name="listView" Background="#FF383838" Grid.ColumnSpan="3" BorderBrush="{x:Null}" Foreground="#FFC8C7C8" MouseDoubleClick="listView_MouseDoubleClick" Grid.Row="1" Margin="0,0,0,32" Grid.RowSpan="2"/>
            <Button x:Name="button_FileSave" Content="Save" Margin="10,10.5,10,6" Grid.Row="2" Style="{DynamicResource ButtonStyle1}" Foreground="#FFC8C7C8" FontSize="9.333" BorderThickness="0" Click="button_FileSave_Click_1"/>
            <Button x:Name="button_FileRead" Content="Read" Margin="10,10.5,8,6" Grid.Column="1" Grid.Row="2" Style="{DynamicResource ButtonStyle1}" Foreground="#FFC8C7C8" FontSize="9.333" BorderThickness="0" Click="button_FileRead_Click"/>
            <Button x:Name="button_FileDelete" Content="Delete" Margin="10,10.5,10,6" Grid.Column="2" Grid.Row="2" Style="{DynamicResource ButtonStyle1}" Foreground="#FFC8C7C8" FontSize="9.333" BorderThickness="0" Click="button_FileDelete_Click"/>
            <Grid  Grid.Column="1" HorizontalAlignment="Right" Height="100" VerticalAlignment="Top" Width="100" Grid.ColumnSpan="2" Grid.RowSpan="2"/>
            <TextBlock x:Name="label1_Copy" Visibility="Hidden" TextAlignment="Center"  Text="曲库" Foreground="#FFC8C7C8" Grid.ColumnSpan="3" Background="#FF6D6D6D" Margin="0,0,1.5,2" d:IsHidden="True"/>
        </Grid>
        <Grid x:Name="inputBoxForFile" Visibility="Hidden" Margin="268,159,474,155.5" Grid.Column="1" Grid.Row="2" Background="#FF3D3D3D" d:LayoutOverrides="LeftMargin, RightMargin, TopMargin, BottomMargin">
            <Label Content="文件名：" Foreground="#FFC8C7C8" Margin="10,14,10.32,5.714"/>
            <TextBox x:Name="RenameBox" Height="39" TextWrapping="Wrap" VerticalAlignment="Top" Margin="60,10,21.32,0" Background="#FFD6D6D6"/>
            <Button x:Name="button_InputBoxCancel" BorderThickness="0" Content="取消" HorizontalAlignment="Right" VerticalAlignment="Bottom" Width="75" Margin="0,0,43,5.76" Style="{DynamicResource ButtonStyle1}" Background="#FFDDDDDD" Click="button_InputBoxCancel_Click"/>
            <Button x:Name="button_InputBoxSave" BorderThickness="0" Content="保存" HorizontalAlignment="Left" VerticalAlignment="Bottom" Width="75" Margin="37.333,0,0,5.76" Style="{DynamicResource ButtonStyle1}" Background="#FFDDDDDD" Click="button_InputBoxSave_Click"/>
            <Border  Margin="-2" CornerRadius="5" BorderThickness="5" BorderBrush="White"/>
        </Grid>
    </Grid>

</Window>
